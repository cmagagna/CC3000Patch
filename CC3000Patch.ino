/*

	The Arduino CC3000 Firmware Upgrader
	
	Version 0.1 - September 19, 2013 - Chris Magagna
	
	This will upgrade a CC3000 to:
		Service Pack Version 1.24
		Release Package 1.11.1
						
	This code released into the public domain, with no usefulness implied blah
	blah blah.
	
!!!!WARNING-WARNING-WARNING-WARNING-WARNING-WARNING-WARNING-WARNING-WARNING
!	
!	WARNING! This will delete the current firmware on your CC3000. If this
!	upgrade fails you will be left with a useless piece of metal where
!	your nice WiFi module used to be.
!	
!!!!WARNING-WARNING-WARNING-WARNING-WARNING-WARNING-WARNING-WARNING-WARNING
	
	Having said that, I've tested this code now on 2 CC3000 modules I made
	myself, an AdaFruit CC3000 breakout
	(http://www.adafruit.com/products/1469), and an official TI CC3000EM
	(https://estore.ti.com/CC3000EM-CC3000-Evaluation-Module-P4257.aspx)
	and so far so good.
	
	This code has been tested with an Arduino Nano upgraded to the OptiBoot
	bootloader and a Uno R3. The code takes up nearly the entire 32K Flash
	space of an ATMega328 so it won't fit on a board with a larger
	bootloader, e.g. the Duemilanove, stock Nano, etc.
	
	This version does NOT work with the Teensy 3. I'm working on it!
	
	Many thanks to AdaFruit for the Adafruit_CC3000 library.
	
	This code is based on a combination of the TI patch programmers:
	PatchProgrammerMSP430F5529_6_11_7_14_24windows_installer.exe
	PatchProgrammerMSP430FR5739_1_11_7_14_24windows_installer.exe
	Both are available on the T.I. website.
	
	To use:
	
	1. Quit the Arduino IDE, if running
	2. Move the folder "Adafruit_CC3000_Library" out of your Library. This code
		uses a custom version of their library, and the two can't coexist. You
		won't be able to compile / upload this program if Arduino sees them both.
	3. Edit the pin assignments CC3000_IRQ, CC3000_VBAT, and CC3000_CS for your
		setup, as necessary.
	4. Wire up your CC3000 to your Arduino
	5. Upload this sketch to your Arduino
	6. Open the Serial Monitor with baud rate 115200
	7. Use option 0 to verify everything is working (see notes below)
	8. Use option 4Y to back up your CC3000's info to your Arduino's EEPROM
	9. Use option 6Y erase the CC3000's current firmware
	10. Use option 7Y to restore your CC3000's info from Arduino EEPROM
	11. Use option 8Y to update the first part of the new firmware
	12. Use option 9Y to update the second part of the new firmware
	13. Use option 0 to verify the CC3000 is now working with your new firmware
	
	For options 0 - 3 you just type in the number and hit Enter or press 'Send'
	but options 4-9 require you to also type UPPERCASE Y or D to confirm you
	want to make a (potentially) destructive change.
	
	If the CC3000 initializes but you can't read the MAC or the firmware
	version then everything else may be working but the CC3000's NVRAM may be
	corrupt. You may be able to recover from this by:
	
	1. Restart your Arduino
	2. Use option 5D to load the T.I. defaults and a stock MAC address
	3. Use option 6Y erase the CC3000's current firmware
	4. Use option 7Y to restore your CC3000's info from Arduino EEPROM
	5. Use option 8Y to update the first part of the new firmware
	6. Use option 9Y to update the second part of the new firmware
	7. Use option 0 to verify the CC3000 is now working with your new firmware
	
*/











#include <SPI.h>
#include <EEPROM.h>

#include "Adafruit_CC3000_4Patching.h"
#include "ccspi.h"
#include "nvmem.h"
#include "wlan.h"


#define COMMAND_BUFFER_SIZE	32

#define CC3000_IRQ   3  // MUST be an interrupt pin!
#define CC3000_VBAT  9
#define CC3000_CS    10



#define MAC_SIZE	6		// how many bytes in a MAC address
byte macBuffer[MAC_SIZE];	// the buffer for the MAC addr
#define MAC_ADDRESS_EEPROM_LOCATION	0x10	// where in EEPROM to write the MAC address for safekeeping


#define RM_SIZE		128		// how many bytes in the CC3000 RM file
byte rmBuffer[RM_SIZE];		// our RM buffer
#define RM_ADDRESS_EEPROM_LOCATION 0x20		// where in EEPROM to write the RM file for safekeeping



Adafruit_CC3000 cc3000 = Adafruit_CC3000(CC3000_CS, CC3000_IRQ, CC3000_VBAT, SPI_CLOCK_DIV2);





#define BIT0	B1
#define BIT1	B10
#define BIT2	B100
#define BIT3	B1000
#define BIT4	B10000
#define BIT5	B100000
#define BIT6	B1000000
#define BIT7	B10000000



/* 
	Some things are different for the Teensy 3.0, so set a flag if we're using
	that hardware.
*/

#if defined(__arm__) && defined(CORE_TEENSY) && defined(__MK20DX128__)
#define TEENSY3   1
#endif













#ifdef TEENSY3
const uint8_t wlan_drv_patch[8168] =
#else
PROGMEM prog_uchar wlan_drv_patch[8168] =
#endif
{ 0x00, 0x01, 0x00, 0x00, 0xE0, 0x1F, 0x00, 0x00, 0x5C, 0x04, 0x18, 0x00, 0xE4, 0x62, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7A, 0x63, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x10, 0x64, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x20, 0x0C, 0x49, 0x08, 0x60, 0x0C, 0x48, 0x19, 0x30, 0xF7, 0x46, 0x30, 0xB5, 0x05, 0x1C, 0xAC, 0x69, 0x68, 0x68, 0x5F, 0x30, 0x09, 0xD1, 0x60, 0x6B, 0x0C, 0x38, 0x01, 0x21, 0x8E, 0x46, 0x06, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x00, 0x20, 0x60, 0x63, 0xAC, 0x69, 0x6C, 0x60, 0x04, 0x48, 0x5B, 0x30, 0x30, 0xBD, 0x40, 0x3B, 0x08, 0x00, 0x49, 0xD0, 0x01, 0x00, 0x09, 0xEA, 0x02, 0x00, 0x91, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xA6, 0x64, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x3C, 0x65, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xB5, 0x85, 0xB0, 0x05, 0x1C, 0xA8, 0x88, 0x00, 0x90, 0x28, 0x89, 0x01, 0x90, 0xE9, 0x68, 0x02, 0x91, 0x28, 0x7C, 0x03, 0x90, 0x2A, 0x6A, 0x00, 0x20, 0x17, 0x56, 0x68, 0x60, 0x00, 0x29, 0x4C, 0xD0, 0x00, 0x2F, 0x4A, 0xDC ,
0xCA, 0x49, 0x0C, 0x1C, 0x08, 0x26, 0x04, 0x90, 0x21, 0x88, 0x00, 0x98, 0x81, 0x42, 0x0C, 0xD1, 0x62, 0x88, 0x01, 0x98, 0x82, 0x42, 0x08, 0xD1, 0x46, 0x20, 0x02, 0x5D, 0x03, 0x98, 0x82, 0x42, 0x03, 0xD1, 0x0E, 0x20, 0x00, 0x57, 0xB8, 0x42, 0x0A, 0xD0, 0x46, 0x20, 0x00, 0x5D, 0x11, 0x28, 0x22, 0xD1, 0x00, 0x98, 0x81, 0x42, 0x1F, 0xD1, 0x0E, 0x20, 0x00, 0x57, 0xFF, 0xFF, 0xD2, 0x65, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xB8, 0x42, 0x1B, 0xD1, 0x04, 0x20, 0x02, 0x1C, 0x02, 0x98, 0xB9, 0x49, 0x01, 0x23, 0x9E, 0x46, 0xEB, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x00, 0x28, 0x17, 0xD0, 0x20, 0x1D, 0x02, 0x99, 0x04, 0x22, 0x01, 0x23, 0x9E, 0x46, 0xE6, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x00, 0x28, 0x0D, 0xD0, 0x46, 0x20, 0x00, 0x5D, 0x11, 0x28, 0x09, 0xD0, 0xA0, 0x6D, 0x00, 0x28, 0x06, 0xD0, 0xAC, 0x34, 0x04, 0x98, 0x01, 0x30, 0x04, 0x90, 0x01, 0x3E, 0xC1, 0xD1, 0x07, 0xE0, 0x04, 0x98, 0x00, 0x06, 0x00, 0x0E ,
0xAC, 0x21, 0x41, 0x43, 0xA6, 0x48, 0x40, 0x18, 0x68, 0x60, 0xA6, 0x48, 0xAD, 0x30, 0x05, 0xB0, 0xF0, 0xBD, 0x00, 0xB5, 0xC2, 0x68, 0x90, 0x69, 0x02, 0x21, 0x01, 0x23, 0x9E, 0x46, 0xA2, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xA2, 0x48, 0x61, 0x30, 0x00, 0xBD, 0x01, 0x79, 0x0B, 0x29, 0x03, 0xD0, 0x89, 0x00, 0x9F, 0x4A, 0x51, 0x5A, 0x01, 0xE0, 0x01, 0x21, 0x49, 0x02, 0x41, 0x60, 0x9D, 0x48, 0x0D, 0x30, 0xF7, 0x46, 0x01, 0x1C, 0xFF, 0xFF, 0x68, 0x66, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x9C, 0x48, 0x02, 0x68, 0x9C, 0x48, 0x01, 0x2A, 0x01, 0xD1, 0x25, 0x30, 0xF7, 0x46, 0x9B, 0x4A, 0x12, 0x68, 0x4A, 0x60, 0x19, 0x30, 0xF7, 0x46, 0x00, 0x21, 0x41, 0x60, 0x99, 0x48, 0x98, 0x49, 0x08, 0x18, 0xF7, 0x46, 0x00, 0x21, 0x41, 0x60, 0x97, 0x48, 0xE6, 0x49, 0x08, 0x18, 0xF7, 0x46, 0xFF, 0xB5, 0x46, 0x69, 0x40, 0x68, 0x01, 0x90, 0x94, 0x49, 0x0A, 0x7C, 0x9A, 0x4F, 0x01, 0x2A, 0x63, 0xD0, 0x09, 0x7C, 0x03, 0x29 ,
0x60, 0xD0, 0x91, 0x4A, 0x92, 0x4B, 0x00, 0x21, 0x02, 0x91, 0x59, 0x56, 0x24, 0x23, 0x59, 0x43, 0x53, 0x18, 0x03, 0x93, 0x01, 0x28, 0x17, 0xD1, 0x8A, 0x18, 0x04, 0x23, 0x6C, 0x46, 0x8C, 0x49, 0x15, 0x79, 0x08, 0x78, 0xC0, 0x43, 0x28, 0x43, 0x20, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x34, 0x01, 0x3B, 0xF5, 0xD1, 0x31, 0x1D, 0x68, 0x46, 0x04, 0x22, 0x01, 0x23, 0x9E, 0x46, 0xA8, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x00, 0x28, 0x40, 0xD0, 0x35, 0x1D, 0x82, 0x48, 0x00, 0x78, 0xFF, 0x28, 0xFF, 0xFF, 0xFE, 0x66, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x11, 0xD0, 0x00, 0x28, 0x0F, 0xD0, 0x03, 0x98, 0x01, 0x1D, 0x28, 0x1C, 0x01, 0x24, 0xA6, 0x46, 0x7E, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x00, 0x28, 0x05, 0xD1, 0x7A, 0x48, 0xA6, 0x46, 0x7B, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x05, 0xE0, 0x28, 0x1C, 0x01, 0x21, 0x8E, 0x46, 0x78, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x01, 0x99, 0x01, 0x29, 0x01, 0xD1, 0x00, 0x28, 0x1E, 0xD1 ,
0x01, 0x99, 0x5F, 0x31, 0x01, 0xD0, 0x00, 0x28, 0x0F, 0xD1, 0xA8, 0x20, 0x81, 0x5D, 0x00, 0x29, 0x08, 0xD0, 0x49, 0x1E, 0x81, 0x55, 0x80, 0x5D, 0x00, 0x28, 0x09, 0xD1, 0x38, 0x1C, 0xFF, 0x30, 0x08, 0x30, 0x11, 0xE0, 0x03, 0x21, 0x02, 0x91, 0x00, 0xE0, 0xA8, 0x20, 0x02, 0x99, 0x81, 0x55, 0x38, 0x1C, 0xFF, 0x30, 0x16, 0x30, 0x07, 0xE0, 0x01, 0x98, 0x01, 0x28, 0x02, 0xD1, 0x38, 0x1C, 0xA3, 0x30, 0x01, 0xE0, 0x38, 0x1C, 0x9F, 0x30, 0x00, 0x90, 0xFF, 0xBD, 0x00, 0xB5, 0x02, 0x1C, 0x10, 0x6A, 0xD1, 0x69, 0x52, 0x69, 0xC3, 0x69, 0x5A, 0x60, 0xFF, 0xFF, 0x94, 0x67, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x01, 0x22, 0x96, 0x46, 0x5E, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x5E, 0x48, 0xFF, 0x30, 0x6E, 0x30, 0x00, 0xBD, 0x10, 0xB5, 0x0A, 0x1C, 0x41, 0x69, 0x00, 0x6A, 0x93, 0x69, 0xDB, 0x69, 0x58, 0x60, 0x90, 0x69, 0x01, 0x24, 0xA6, 0x46, 0x56, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0xA6, 0x46, 0x56, 0x48, 0xFE, 0x44 ,
0x00, 0x47, 0x55, 0x48, 0xFF, 0x30, 0xB6, 0x30, 0x10, 0xBD, 0x70, 0xB5, 0x05, 0x1C, 0x6E, 0x69, 0x53, 0x48, 0x02, 0x68, 0x5C, 0x21, 0x88, 0x5D, 0x04, 0x28, 0x15, 0xD1, 0x07, 0x20, 0x88, 0x55, 0x10, 0x0B, 0x11, 0xD2, 0x01, 0x24, 0xA6, 0x46, 0x4E, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x00, 0x28, 0x0A, 0xD0, 0x47, 0x21, 0x89, 0x57, 0xC1, 0x60, 0x11, 0x21, 0xC9, 0x02, 0x00, 0x22, 0x04, 0x23, 0xA6, 0x46, 0x48, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0x01, 0x20, 0x68, 0x60, 0x43, 0x48, 0x46, 0x49, 0x08, 0x18, 0x70, 0xBD, 0x70, 0xB5, 0x05, 0x1C, 0xAE, 0x69, 0x9C, 0x20, 0x80, 0x19, 0x4B, 0x21, 0x89, 0x00, 0x01, 0x24, 0xFF, 0xFF, 0x2A, 0x68, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xA6, 0x46, 0x41, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x5C, 0x21, 0x88, 0x5D, 0x07, 0x28, 0x01, 0xD1, 0x09, 0x20, 0x00, 0xE0, 0x05, 0x20, 0xAA, 0x69, 0x88, 0x54, 0x30, 0x1C, 0xA6, 0x46, 0x3B, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x68, 0x60, 0xE9, 0x48 ,
0x4D, 0x30, 0x70, 0xBD, 0xF0, 0xB5, 0x41, 0x68, 0x82, 0x68, 0x88, 0x23, 0x5E, 0x18, 0x37, 0x88, 0x0B, 0x6F, 0x00, 0x2B, 0x01, 0xD1, 0x00, 0x2F, 0x10, 0xD1, 0x06, 0x2F, 0x02, 0xDD, 0x00, 0x21, 0xC9, 0x43, 0x07, 0xE0, 0x33, 0x88, 0x9B, 0x00, 0xC9, 0x18, 0x0A, 0x67, 0x31, 0x88, 0x01, 0x31, 0x31, 0x80, 0x01, 0x21, 0x81, 0x60, 0xEA, 0x48, 0x1D, 0x30, 0xF0, 0xBD, 0x0B, 0x1C, 0x01, 0x24, 0x5D, 0x6F, 0x1D, 0x67, 0x04, 0x33, 0x01, 0x34, 0x06, 0x2C, 0xE1, 0xDA, 0xF8, 0xE7, 0x00, 0xB5, 0x00, 0x21, 0xC1, 0x60, 0xEB, 0x48, 0x01, 0x68, 0x10, 0x31, 0xE8, 0x48, 0x20, 0x22, 0x01, 0x23, 0x9E, 0x46, 0xE9, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xE7, 0x48, 0xFB, 0x30, 0x00, 0xBD, 0xFF, 0xFF, 0xC0, 0x68, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x14, 0x0D, 0x1B, 0x00, 0x54, 0x19, 0x1B, 0x00, 0x91, 0x1A, 0x01, 0x00, 0x4B, 0xAD, 0x03, 0x00, 0x61, 0x4E, 0x01, 0x00, 0x06, 0x32, 0x08, 0x00, 0x1F, 0x0B, 0x02, 0x00, 0x54, 0x3F ,
0x08, 0x00, 0x45, 0xC1, 0x00, 0x00, 0x84, 0x3C, 0x08, 0x00, 0x1B, 0x02, 0x00, 0x00, 0xED, 0x17, 0x00, 0x00, 0xF3, 0xC1, 0x01, 0x00, 0x34, 0x19, 0x1B, 0x00, 0x08, 0x19, 0x1B, 0x00, 0xA6, 0x44, 0x08, 0x00, 0x1C, 0x17, 0x1B, 0x00, 0x18, 0x17, 0x1B, 0x00, 0xCB, 0x67, 0x03, 0x00, 0x0D, 0x47, 0x02, 0x00, 0x39, 0x42, 0x03, 0x00, 0xBD, 0xE7, 0x02, 0x00, 0xB1, 0x40, 0x03, 0x00, 0xB9, 0xEA, 0x01, 0x00, 0x45, 0xDA, 0x00, 0x00, 0x24, 0x41, 0x08, 0x00, 0x71, 0xC0, 0x02, 0x00, 0x7B, 0xC0, 0x02, 0x00, 0x9F, 0x03, 0x00, 0x00, 0x7D, 0xB8, 0x03, 0x00, 0xC9, 0x21, 0x01, 0x00, 0xF0, 0xB5, 0x88, 0xB0, 0x06, 0x91, 0x07, 0x90, 0x86, 0x69, 0xF0, 0x1C, 0xE4, 0xA1, 0x04, 0x22, 0x01, 0x24, 0xA6, 0x46, 0x0F, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xFF, 0xFF, 0x56, 0x69, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x28, 0x40, 0xD1, 0xF3, 0x79, 0xE2, 0x48, 0x1A, 0x1C, 0x03, 0x70, 0x30, 0x7A, 0x00, 0x90, 0x70, 0x7A, 0x01, 0x90 ,
0x03, 0x20, 0x2F, 0x49, 0xF0, 0x31, 0xA6, 0x46, 0xE2, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0xF2, 0x79, 0x35, 0x7A, 0x77, 0x7A, 0x78, 0x1B, 0x43, 0x1C, 0x93, 0x42, 0x1E, 0xD0, 0x16, 0x2A, 0x0F, 0xDB, 0x00, 0x2D, 0x0D, 0xD1, 0x01, 0xE0, 0x8F, 0xC6, 0x03, 0x00, 0xDA, 0x48, 0x04, 0x70, 0x0A, 0x20, 0x81, 0x19, 0xD3, 0x48, 0x1A, 0x1C, 0xA6, 0x46, 0xAE, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x82, 0xE0, 0xD6, 0x48, 0x04, 0x70, 0xCF, 0x48, 0x40, 0x19, 0x0A, 0x21, 0x89, 0x19, 0x7A, 0x1B, 0x52, 0x1C, 0xA6, 0x46, 0xA7, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x75, 0xE0, 0xCE, 0x48, 0x04, 0x70, 0xCE, 0x48, 0x04, 0x70, 0x0A, 0x20, 0x81, 0x19, 0xC6, 0x48, 0xA6, 0x46, 0xA1, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x69, 0xE0, 0xF0, 0x1C, 0x03, 0x27, 0xC0, 0xA1, 0x3A, 0x1C, 0xA6, 0x46, 0xCB, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xFF, 0xFF, 0xEC, 0x69, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x28, 0x5F, 0xD1, 0xFF, 0xE7, 0xF1, 0x79, 0xBE, 0x48 ,
0x01, 0x70, 0xBE, 0x4D, 0xB2, 0x79, 0x2A, 0x70, 0x38, 0x1C, 0x0A, 0x49, 0xF4, 0x31, 0xA6, 0x46, 0xBC, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x28, 0x78, 0x00, 0x28, 0x0E, 0xD1, 0xBD, 0x48, 0x04, 0x70, 0xBD, 0x48, 0x04, 0x70, 0x38, 0x1C, 0x03, 0x49, 0xF5, 0x31, 0xA6, 0x46, 0xBB, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x02, 0xE0, 0xC0, 0x46, 0xC7, 0x04, 0x00, 0x00, 0x30, 0x7A, 0x00, 0x90, 0x70, 0x7A, 0x01, 0x90, 0xAD, 0x48, 0x02, 0x78, 0xF3, 0x79, 0x38, 0x1C, 0xB5, 0x49, 0xF6, 0x31, 0xA6, 0x46, 0xAD, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0x23, 0x1C, 0xF2, 0x79, 0x37, 0x7A, 0x70, 0x7A, 0xC1, 0x1B, 0x4D, 0x1C, 0x95, 0x42, 0x1E, 0xD0, 0xA4, 0x49, 0x09, 0x78, 0x16, 0x29, 0x0C, 0xDB, 0x00, 0x2F, 0x0A, 0xD1, 0xA7, 0x48, 0x03, 0x70, 0x0A, 0x20, 0x81, 0x19, 0xE6, 0x48, 0x2A, 0x1C, 0xA6, 0x46, 0x79, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x18, 0xE0, 0xA3, 0x49, 0x0B, 0x70, 0xFF, 0xFF, 0x82, 0x6A, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00 ,
0xE2, 0x49, 0xCB, 0x19, 0x0A, 0x21, 0x89, 0x19, 0xC0, 0x1B, 0x42, 0x1C, 0x18, 0x1C, 0xA6, 0x46, 0x72, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x0A, 0xE0, 0x9B, 0x48, 0x03, 0x70, 0x9B, 0x48, 0x03, 0x70, 0x0A, 0x20, 0x81, 0x19, 0xD9, 0x48, 0xA6, 0x46, 0x6C, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x93, 0x48, 0x00, 0x78, 0x00, 0x28, 0x0A, 0xD0, 0x92, 0x48, 0x00, 0x78, 0x00, 0x28, 0x06, 0xD0, 0x91, 0x48, 0x00, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x90, 0x48, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0x8C, 0xE0, 0x03, 0x20, 0x17, 0x21, 0x89, 0x01, 0xA6, 0x46, 0x8D, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x83, 0x48, 0x01, 0x78, 0x83, 0x48, 0x07, 0x78, 0x80, 0x4E, 0x7F, 0x4D, 0xDE, 0x48, 0x00, 0x68, 0x00, 0x28, 0x2E, 0xD1, 0x07, 0x98, 0x41, 0x61, 0x06, 0x62, 0xC4, 0x48, 0x06, 0x9A, 0x10, 0x64, 0x02, 0x2F, 0x01, 0xD0, 0x03, 0x2F, 0x01, 0xD1, 0x03, 0x22, 0x00, 0xE0, 0x3A, 0x1C, 0x06, 0x9B, 0xDA, 0x63, 0x2A, 0x78, 0x9A, 0x63, 0x01, 0x2F ,
0xFF, 0xFF, 0x18, 0x6B, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x03, 0xD1, 0x05, 0x29, 0x04, 0xD0, 0x0D, 0x29, 0x02, 0xD0, 0xEA, 0x48, 0xDB, 0x30, 0x64, 0xE0, 0x00, 0x25, 0x00, 0x95, 0x01, 0x91, 0x02, 0x96, 0x03, 0x95, 0x04, 0x90, 0x2B, 0x1C, 0x20, 0x1C, 0x01, 0x1C, 0x8E, 0x46, 0xE4, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0xE4, 0x48, 0x04, 0x60, 0x28, 0x1C, 0xA6, 0x46, 0xE3, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x4C, 0xE0, 0x0D, 0x27, 0x00, 0x20, 0x39, 0x1C, 0x05, 0xAA, 0xA6, 0x46, 0xE0, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x68, 0x46, 0x80, 0x8A, 0x40, 0x08, 0x05, 0xD2, 0x38, 0x1C, 0x50, 0x21, 0xA6, 0x46, 0xDA, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x38, 0x1C, 0x23, 0x1C, 0x29, 0x1C, 0x00, 0x22, 0x9E, 0x46, 0xED, 0x4F, 0xFE, 0x44, 0x38, 0x47, 0x2B, 0x78, 0x0D, 0x20, 0x31, 0x1C, 0x22, 0x1C, 0x96, 0x46, 0xE9, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0x28, 0x78, 0x01, 0x30, 0x02, 0x1C, 0x0D, 0x20, 0x54, 0x49, 0x23, 0x1C, 0x9E, 0x46 ,
0xE4, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0x52, 0x4E, 0x28, 0x78, 0xFF, 0xFF, 0xAE, 0x6B, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x02, 0x30, 0x02, 0x1C, 0x0D, 0x20, 0x31, 0x1C, 0x23, 0x1C, 0x9E, 0x46, 0xDF, 0x4F, 0xFE, 0x44, 0x38, 0x47, 0x30, 0x78, 0x00, 0x28, 0x0A, 0xD0, 0x28, 0x78, 0x03, 0x30, 0x02, 0x1C, 0x48, 0x48, 0x03, 0x78, 0x0D, 0x20, 0x8E, 0x49, 0xA6, 0x46, 0xD8, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0xBD, 0x48, 0x21, 0x1C, 0x01, 0x60, 0x00, 0x20, 0x8E, 0x46, 0xBC, 0x49, 0xFE, 0x44, 0x08, 0x47, 0xB7, 0x48, 0xEA, 0x49, 0x08, 0x18, 0x08, 0xB0, 0xF0, 0xBD, 0xC0, 0x46, 0x91, 0xE1, 0x00, 0x00, 0x01, 0x1C, 0xE7, 0x48, 0x02, 0x68, 0xE7, 0x48, 0x00, 0x2A, 0x04, 0xD0, 0x00, 0x22, 0x0A, 0x62, 0x8A, 0x61, 0x1D, 0x30, 0xF7, 0x46, 0xD7, 0x30, 0xF7, 0x46, 0x01, 0x1C, 0xE2, 0x48, 0x02, 0x68, 0xE2, 0x48, 0x00, 0x2A, 0x02, 0xD0, 0xFF, 0x30, 0xB4, 0x30, 0xF7, 0x46, 0x00, 0x22, 0xCA, 0x61, 0x8A, 0x61, 0x4F, 0x30 ,
0xF7, 0x46, 0xC0, 0x46, 0x89, 0x17, 0x02, 0x00, 0xDC, 0x48, 0x01, 0x68, 0x8A, 0x69, 0x01, 0x20, 0xC0, 0x03, 0x10, 0x43, 0xFF, 0xFF, 0x44, 0x6C, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x88, 0x61, 0x00, 0x20, 0x08, 0x61, 0xD9, 0x48, 0x23, 0x30, 0xF7, 0x46, 0x46, 0x17, 0x1B, 0x00, 0x30, 0x3F, 0x08, 0x00, 0x41, 0xEB, 0x00, 0x00, 0x09, 0xB4, 0x03, 0x00, 0x70, 0xB5, 0x05, 0x1C, 0xD3, 0x4E, 0x29, 0x6A, 0xEA, 0x69, 0x30, 0x1C, 0x01, 0x24, 0xA6, 0x46, 0xD4, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x68, 0x69, 0xA6, 0x46, 0xCF, 0x49, 0xFE, 0x44, 0x08, 0x47, 0xA8, 0x69, 0x06, 0x30, 0xA8, 0x60, 0xCD, 0x48, 0x00, 0x68, 0x68, 0x60, 0xEE, 0x60, 0xCC, 0x48, 0x6D, 0x30, 0x70, 0xBD, 0x30, 0xB5, 0xF1, 0x48, 0x01, 0x6D, 0x80, 0x6C, 0x08, 0x43, 0x18, 0xD0, 0xEF, 0x49, 0x08, 0x1C, 0x07, 0x22, 0xFF, 0x23, 0x09, 0x33, 0x1B, 0x58, 0x00, 0x2B, 0x04, 0xD0, 0xFF, 0x30, 0x1D, 0x30, 0x01, 0x3A, 0xF6, 0xD1, 0x0B, 0xE0, 0x02, 0x20 ,
0xF0, 0x4A, 0xF1, 0x4B, 0x01, 0x24, 0xA6, 0x46, 0xF0, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0xA6, 0x46, 0xEF, 0x48, 0xFE, 0x44, 0x00, 0x47, 0xEF, 0x48, 0xFF, 0x30, 0x5C, 0x30, 0x30, 0xBD, 0xFF, 0xFF, 0xDA, 0x6C, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xC0, 0x46, 0x53, 0x53, 0x49, 0x44, 0x00, 0xC0, 0x46, 0xC0, 0x4B, 0x45, 0x59, 0x00, 0xEE, 0x62, 0x08, 0x00, 0xF0, 0x62, 0x08, 0x00, 0xEC, 0x62, 0x08, 0x00, 0xED, 0x62, 0x08, 0x00, 0xE7, 0x7E, 0x03, 0x00, 0x13, 0x7F, 0x03, 0x00, 0xE8, 0x62, 0x08, 0x00, 0xE9, 0x62, 0x08, 0x00, 0xEA, 0x62, 0x08, 0x00, 0xEB, 0x62, 0x08, 0x00, 0xDD, 0x7E, 0x03, 0x00, 0x8F, 0xC6, 0x03, 0x00, 0xC7, 0x04, 0x00, 0x00, 0xF0, 0xB5, 0x87, 0xB0, 0x00, 0x91, 0x01, 0x90, 0x6B, 0x48, 0x01, 0x68, 0xCD, 0x4A, 0x14, 0x1C, 0x02, 0x94, 0x07, 0x26, 0x00, 0x25, 0x03, 0x95, 0x04, 0x94, 0x05, 0x95, 0xDD, 0x48, 0x00, 0x68, 0x08, 0x43, 0x27, 0xD0, 0xE0, 0x68, 0x03, 0x99, 0x88, 0x42, 0x0A, 0xDD ,
0x03, 0x90, 0x40, 0x1C, 0x00, 0x99, 0x88, 0x60, 0xC3, 0x49, 0xFF, 0x20, 0x1D, 0x30, 0x68, 0x43, 0x0C, 0x18, 0xE0, 0x68, 0x04, 0x91, 0x02, 0x99, 0xC9, 0x68, 0x88, 0x42, 0x10, 0xDB, 0x88, 0x42, 0x10, 0xD1, 0x02, 0x98, 0x01, 0x27, 0xBE, 0x46, 0xFF, 0xFF, 0x70, 0x6D, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xCC, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x06, 0x90, 0x20, 0x1C, 0xBE, 0x46, 0xC9, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x06, 0x99, 0x88, 0x42, 0x01, 0xDA, 0x05, 0x95, 0x02, 0x94, 0x51, 0x48, 0x01, 0x68, 0xFF, 0x27, 0x09, 0x37, 0x38, 0x59, 0x00, 0x28, 0x06, 0xD0, 0xC5, 0x48, 0x00, 0x68, 0x07, 0x2E, 0x00, 0xD1, 0x2E, 0x1C, 0x08, 0x43, 0x04, 0xD0, 0xFF, 0x34, 0x1D, 0x34, 0x01, 0x35, 0x07, 0x2D, 0xC2, 0xDB, 0x07, 0x2E, 0x0A, 0xD1, 0xBE, 0x48, 0x00, 0x68, 0x08, 0x43, 0x06, 0xD0, 0x05, 0x9E, 0x30, 0x1C, 0x01, 0x21, 0x8E, 0x46, 0xB8, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x01, 0x98, 0x47, 0x61, 0x00, 0x21, 0x81, 0x61 ,
0xFF, 0x22, 0x1D, 0x32, 0x72, 0x43, 0x04, 0x99, 0x89, 0x18, 0xC1, 0x61, 0x06, 0x62, 0xB2, 0x48, 0x39, 0x30, 0x07, 0xB0, 0xF0, 0xBD, 0x10, 0xB5, 0x04, 0x1C, 0x00, 0x20, 0x01, 0x21, 0x8E, 0x46, 0xAF, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x40, 0x1E, 0x00, 0xD5, 0x00, 0x20, 0x60, 0x60, 0xE0, 0x61, 0xAC, 0x48, 0xFF, 0xFF, 0x06, 0x6E, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x21, 0x30, 0x10, 0xBD, 0xC0, 0x46, 0x10, 0x63, 0x08, 0x00, 0x70, 0xB5, 0x04, 0x1C, 0xE5, 0x69, 0x66, 0x69, 0x00, 0x20, 0x01, 0x21, 0x8E, 0x46, 0xA5, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x60, 0x60, 0xAB, 0x19, 0xA4, 0x4A, 0xA3, 0x49, 0x93, 0x42, 0x02, 0xD3, 0x9A, 0x1A, 0x82, 0x42, 0x02, 0xD9, 0x08, 0x1C, 0x99, 0x30, 0x70, 0xBD, 0x08, 0x1C, 0xAB, 0x30, 0x70, 0xBD, 0x08, 0x6B, 0x41, 0x7D, 0x02, 0x88, 0x92, 0x00, 0x51, 0x1A, 0x3C, 0x39, 0xFF, 0x22, 0x5F, 0x32, 0x91, 0x42, 0x03, 0xD9, 0x65, 0x21, 0x01, 0x80, 0x02, 0x21, 0x81, 0x73, 0x99, 0x48 ,
0x97, 0x49, 0x08, 0x18, 0xF7, 0x46, 0xC0, 0x46, 0x30, 0x63, 0x08, 0x00, 0xF8, 0xB5, 0x40, 0x68, 0x24, 0x21, 0x41, 0x43, 0x95, 0x48, 0x45, 0x18, 0x28, 0x1D, 0x0C, 0x21, 0x49, 0x19, 0x04, 0x22, 0x01, 0x23, 0x9E, 0x46, 0x92, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x8F, 0x4C, 0x00, 0x28, 0x1B, 0xD0, 0x2B, 0x1C, 0x04, 0x22, 0x6E, 0x46, 0x8F, 0x49, 0x1F, 0x7B, 0x08, 0x78, 0xFF, 0xFF, 0x9C, 0x6E, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xC0, 0x43, 0x38, 0x43, 0x30, 0x70, 0x01, 0x33, 0x01, 0x31, 0x01, 0x36, 0x01, 0x3A, 0xF5, 0xD1, 0x0C, 0x20, 0x41, 0x19, 0x68, 0x46, 0x04, 0x22, 0x01, 0x23, 0x9E, 0x46, 0x85, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x00, 0x28, 0x02, 0xD0, 0x20, 0x1C, 0x4A, 0x30, 0xF8, 0xBD, 0x20, 0x1C, 0xF8, 0xBD, 0xB1, 0xBD, 0x00, 0x00, 0x15, 0x95, 0x00, 0x00, 0x58, 0x3F, 0x08, 0x00, 0xF3, 0xF8, 0x00, 0x00, 0xE9, 0x09, 0x02, 0x00, 0xDD, 0x0A, 0x02, 0x00, 0xF8, 0xB5, 0x05, 0x1C, 0xAA, 0x69, 0x7C, 0x49 ,
0x00, 0x20, 0x08, 0x56, 0x24, 0x21, 0x41, 0x43, 0x75, 0x48, 0x43, 0x18, 0x04, 0x24, 0x6E, 0x46, 0x75, 0x49, 0x1F, 0x79, 0x08, 0x78, 0xC0, 0x43, 0x38, 0x43, 0x30, 0x70, 0x01, 0x33, 0x01, 0x31, 0x01, 0x36, 0x01, 0x3C, 0xF5, 0xD1, 0x11, 0x1D, 0x68, 0x46, 0x04, 0x22, 0x01, 0x24, 0xA6, 0x46, 0x6C, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x01, 0x1C, 0x6C, 0x48, 0x04, 0xD0, 0x6D, 0x49, 0x09, 0x78, 0x69, 0x60, 0x45, 0x30, 0xF8, 0xBD, 0xFF, 0xFF, 0x32, 0x6F, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xEC, 0x61, 0xAF, 0x30, 0xF8, 0xBD, 0x2B, 0x09, 0x02, 0x00, 0x70, 0xB5, 0xC5, 0x68, 0x81, 0x68, 0x0A, 0x89, 0x6B, 0x4E, 0x00, 0x2A, 0x22, 0xD0, 0x01, 0x24, 0xC2, 0x6D, 0xA2, 0x18, 0xC2, 0x65, 0x08, 0x89, 0x0D, 0x28, 0x1B, 0xD1, 0x68, 0x6B, 0x21, 0x1C, 0xA6, 0x46, 0x61, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x22, 0x1C, 0x28, 0x1C, 0x00, 0x21, 0xA6, 0x46, 0x5E, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x2C, 0x60, 0xE9, 0x6B, 0x28, 0x1C ,
0xA6, 0x46, 0x5C, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x28, 0x1C, 0xA6, 0x46, 0x5A, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x30, 0x1C, 0x3D, 0x30, 0x70, 0xBD, 0x30, 0x1C, 0x23, 0x30, 0x70, 0xBD, 0xC0, 0x46, 0xB1, 0x02, 0x00, 0x00, 0x74, 0x3F, 0x08, 0x00, 0x19, 0xC6, 0x00, 0x00, 0x5C, 0x3F, 0x08, 0x00, 0x1D, 0xC2, 0x00, 0x00, 0x68, 0x44, 0x08, 0x00, 0x43, 0x12, 0x03, 0x00, 0x34, 0x63, 0x08, 0x00, 0x2F, 0x7A, 0x02, 0x00, 0xB4, 0x36, 0x08, 0x00, 0x8F, 0xF4, 0x01, 0x00, 0x09, 0xB4, 0x03, 0x00, 0xFF, 0xFF, 0xC8, 0x6F, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xF0, 0xB5, 0x05, 0x1C, 0xAB, 0x69, 0xEC, 0x69, 0x60, 0x68, 0x00, 0x68, 0x2A, 0x30, 0x01, 0x78, 0x0A, 0x06, 0x41, 0x78, 0x09, 0x04, 0x8A, 0x18, 0x81, 0x78, 0x09, 0x02, 0x8A, 0x18, 0xC1, 0x78, 0x8A, 0x18, 0x8E, 0x26, 0xF1, 0x5A, 0x09, 0x0A, 0x01, 0x70, 0xF0, 0x5C, 0x61, 0x68, 0x09, 0x68, 0x2B, 0x26, 0x70, 0x54, 0x8C, 0x20, 0xC0, 0x18, 0x61, 0x68, 0x0E, 0x68 ,
0x01, 0x88, 0x09, 0x0A, 0x2C, 0x27, 0xB9, 0x55, 0x61, 0x68, 0x09, 0x68, 0x2D, 0x26, 0x00, 0x78, 0x70, 0x54, 0x60, 0x68, 0x01, 0x68, 0x32, 0x31, 0x08, 0x78, 0x00, 0x02, 0x49, 0x78, 0x08, 0x18, 0x00, 0x04, 0x00, 0x0C, 0x8C, 0x21, 0xCB, 0x58, 0x32, 0x49, 0x41, 0x40, 0x08, 0x04, 0x00, 0x0C, 0xC0, 0x18, 0x80, 0x1A, 0x01, 0x21, 0x8E, 0x46, 0x2F, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x61, 0x68, 0x0A, 0x68, 0x32, 0x23, 0x01, 0x0A, 0x99, 0x54, 0x61, 0x68, 0x09, 0x68, 0x33, 0x22, 0x50, 0x54, 0x60, 0x68, 0x68, 0x60, 0x29, 0x48, 0xF0, 0xBD, 0x00, 0x00, 0xFF, 0xFF, 0x5E, 0x70, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x34, 0x04, 0x1B, 0x00, 0x02, 0x6A, 0x8B, 0x69, 0xDB, 0x69, 0x1B, 0x68, 0x83, 0x60, 0x88, 0x69, 0xC0, 0x69, 0x41, 0x68, 0x8A, 0x42, 0x00, 0xDA, 0x42, 0x60, 0x22, 0x48, 0x79, 0x30, 0xF7, 0x46, 0x32, 0x04, 0x00, 0x00, 0xC4, 0x07, 0x00, 0x00, 0x15, 0x09, 0x02, 0x00, 0xC5, 0x93, 0x00, 0x00 ,
0x0D, 0x91, 0x00, 0x00, 0x40, 0x1E, 0x80, 0x00, 0x1C, 0x4B, 0x19, 0x50, 0x1A, 0x49, 0x0A, 0x50, 0xF7, 0x46, 0xC0, 0x46, 0xBD, 0xB5, 0x00, 0x00, 0x95, 0x92, 0x00, 0x00, 0xFD, 0x93, 0x00, 0x00, 0x54, 0x3F, 0x08, 0x00, 0x29, 0x4F, 0x03, 0x00, 0xDF, 0xE8, 0x02, 0x00, 0x36, 0x89, 0x41, 0x00, 0x81, 0x06, 0x00, 0x00, 0xB1, 0x78, 0x00, 0x00, 0x94, 0xEC, 0x01, 0x00, 0x08, 0x19, 0x1B, 0x00, 0x8F, 0xC6, 0x03, 0x00, 0x1C, 0x17, 0x1B, 0x00, 0x67, 0x66, 0x03, 0x00, 0xA6, 0x44, 0x08, 0x00, 0x18, 0x17, 0x1B, 0x00, 0xA7, 0x2F, 0x02, 0x00, 0x91, 0x44, 0x03, 0x00, 0x91, 0x63, 0x03, 0x00, 0x5B, 0x44, 0x03, 0x00, 0xFF, 0xFF, 0xF4, 0x70, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xE7, 0x44, 0x03, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x61, 0xA2, 0x03, 0x00, 0x6A, 0x1E, 0x01, 0x00, 0x45, 0xDA, 0x00, 0x00, 0x04, 0xF3, 0x1A, 0x00, 0x80, 0x7B, 0x08, 0x00, 0xFC, 0xB5, 0x04, 0x1C, 0xA5, 0x69, 0x60, 0x6A, 0x01, 0x90, 0x20, 0x69 ,
0x00, 0x28, 0x35, 0xD4, 0x08, 0x28, 0x33, 0xDA, 0xE1, 0x69, 0x09, 0x68, 0x10, 0x29, 0x2F, 0xD1, 0xAC, 0x21, 0x41, 0x43, 0xAD, 0x4A, 0x51, 0x5C, 0x49, 0x08, 0x27, 0xD3, 0x00, 0x06, 0x00, 0x16, 0xA2, 0x68, 0x69, 0x46, 0x01, 0x23, 0x9E, 0x46, 0xA9, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x06, 0x1C, 0x39, 0x30, 0x1F, 0xD0, 0x00, 0x2E, 0x1D, 0xD0, 0x00, 0x98, 0x07, 0x68, 0x00, 0x99, 0x0C, 0x39, 0x01, 0x98, 0x01, 0x60, 0x28, 0x1D, 0x10, 0x21, 0x79, 0x1A, 0x04, 0x22, 0x01, 0x23, 0x9E, 0x46, 0xA0, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x02, 0x22, 0x2A, 0x80, 0xA8, 0x1C, 0x08, 0x21, 0x79, 0x1A, 0x01, 0x23, 0x9E, 0x46, 0x9B, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x03, 0xE0, 0x38, 0x20, 0xFF, 0xFF, 0x8A, 0x71, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x20, 0xC6, 0x43, 0x26, 0x60, 0x98, 0x48, 0x7C, 0x30, 0x20, 0x62, 0xFC, 0xBD, 0x70, 0xB5, 0x05, 0x1C, 0x28, 0x69, 0x69, 0x69, 0x0E, 0x78, 0xA9, 0x69, 0x90, 0x29 ,
0x22, 0xD1, 0x04, 0x2E, 0x20, 0xD0, 0x05, 0x2E, 0x1E, 0xD0, 0x0A, 0x2E, 0x1C, 0xD0, 0x06, 0x2E, 0x1A, 0xD0, 0x0C, 0x2E, 0x01, 0xDB, 0x10, 0x2E, 0x16, 0xD1, 0x01, 0x24, 0xA6, 0x46, 0x8C, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x8B, 0x48, 0x8C, 0x49, 0x00, 0x22, 0xA6, 0x46, 0x8B, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x32, 0x1C, 0x03, 0x20, 0xDD, 0x49, 0xA6, 0x46, 0xDD, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x87, 0x48, 0xFF, 0x30, 0x5F, 0x30, 0x28, 0x62, 0x70, 0xBD, 0xF0, 0xB5, 0x89, 0xB0, 0x05, 0x90, 0x41, 0x69, 0x02, 0x69, 0x80, 0x48, 0x86, 0x4E, 0x82, 0x42, 0x51, 0xD0, 0x04, 0x30, 0x82, 0x42, 0x3C, 0xD0, 0x80, 0x48, 0x82, 0x42, 0x00, 0xD0, 0xE3, 0xE0, 0x0D, 0x68, 0x0C, 0x20, 0x08, 0x1A, 0x06, 0x90, 0x48, 0x68, 0x08, 0x18, 0x06, 0x1D, 0xFF, 0xFF, 0x20, 0x72, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x88, 0x68, 0x00, 0x90, 0x73, 0x88, 0x03, 0x20, 0xB7, 0x21, 0xC9, 0x00, 0x2A, 0x1C, 0x01, 0x24, 0xA6, 0x46, 0x77, 0x4F ,
0xFE, 0x44, 0x38, 0x47, 0x28, 0x1C, 0x31, 0x1C, 0x10, 0x22, 0xA6, 0x46, 0x74, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x06, 0x1C, 0x12, 0xD1, 0xAC, 0x21, 0x69, 0x43, 0xF2, 0x48, 0x40, 0x18, 0x46, 0x21, 0x09, 0x5C, 0x11, 0x29, 0x01, 0xD1, 0x44, 0x21, 0x0C, 0x54, 0x44, 0x21, 0x0A, 0x5C, 0x03, 0x20, 0xBB, 0x49, 0x0B, 0x31, 0xA6, 0x46, 0xBB, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x66, 0x48, 0x31, 0x1C, 0x06, 0x9A, 0xA6, 0x46, 0x62, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x68, 0x48, 0xEC, 0x30, 0xAB, 0xE0, 0x08, 0x68, 0xC0, 0x00, 0x30, 0x18, 0x8A, 0x68, 0x02, 0x2A, 0x02, 0xD0, 0xE7, 0x20, 0x80, 0x00, 0xA2, 0xE0, 0xCA, 0x68, 0x89, 0x18, 0x09, 0x7B, 0x41, 0x60, 0x80, 0x21, 0x01, 0x60, 0x3B, 0x20, 0x00, 0x01, 0x99, 0xE0, 0x08, 0x68, 0x06, 0x90, 0xC0, 0x00, 0x34, 0x58, 0x10, 0x20, 0x04, 0x90, 0x01, 0x25, 0xFF, 0xFF, 0xB6, 0x72, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xAE, 0x46, 0x58, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x07, 0x90 ,
0x00, 0x28, 0x00, 0xD1, 0x89, 0xE0, 0x0C, 0x21, 0x07, 0x98, 0x0F, 0x18, 0xD2, 0x49, 0xAC, 0x20, 0x06, 0x9A, 0x50, 0x43, 0x08, 0x18, 0x48, 0x22, 0x13, 0x5C, 0x5B, 0x06, 0x5B, 0x0E, 0x13, 0x54, 0x06, 0x9A, 0xD2, 0x00, 0xB6, 0x18, 0x71, 0x68, 0x00, 0x29, 0x47, 0xD1, 0x00, 0x2C, 0x01, 0xDD, 0x08, 0x2C, 0x21, 0xDB, 0x00, 0x22, 0x69, 0x46, 0x0A, 0x70, 0x01, 0x92, 0x0A, 0x81, 0x8A, 0x72, 0xCD, 0x72, 0x0D, 0x73, 0x4D, 0x73, 0x01, 0x88, 0xE4, 0x48, 0x06, 0x23, 0xAE, 0x46, 0xE4, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0x04, 0x1C, 0x02, 0xDC, 0x00, 0x20, 0xC0, 0x43, 0x36, 0xE0, 0x34, 0x60, 0xAC, 0x20, 0x60, 0x43, 0xBC, 0x49, 0x09, 0x18, 0x5C, 0x22, 0x28, 0x1C, 0x50, 0x54, 0x48, 0x20, 0x42, 0x5C, 0x52, 0x06, 0x52, 0x0E, 0x42, 0x54, 0xAC, 0x20, 0x60, 0x43, 0xB6, 0x49, 0x08, 0x18, 0x5C, 0x21, 0x09, 0x5C, 0x49, 0x1E, 0x02, 0x29, 0x16, 0xD9, 0x03, 0x39, 0xFF, 0xFF, 0x4C, 0x73, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00 ,
0x08, 0xD0, 0x00, 0x20, 0x30, 0x56, 0xAE, 0x46, 0xD3, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x80, 0x20, 0x30, 0x60, 0xDB, 0xE7, 0x08, 0x94, 0x80, 0x21, 0x31, 0x60, 0x48, 0x22, 0x13, 0x5C, 0x19, 0x43, 0x11, 0x54, 0xAE, 0x46, 0xCD, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x0A, 0xE0, 0x01, 0x20, 0xCE, 0xE7, 0x06, 0x98, 0x39, 0x1C, 0x04, 0xAA, 0xAE, 0x46, 0xC9, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x04, 0x1C, 0x08, 0x90, 0x06, 0x98, 0x38, 0x60, 0x08, 0x98, 0x78, 0x60, 0x00, 0x28, 0x15, 0xD0, 0xAC, 0x20, 0x60, 0x43, 0x9E, 0x49, 0x09, 0x18, 0x48, 0x88, 0x02, 0x04, 0x02, 0x20, 0x10, 0x43, 0xB8, 0x60, 0x48, 0x68, 0x02, 0x0E, 0x01, 0x02, 0x09, 0x0E, 0x09, 0x02, 0x11, 0x43, 0x02, 0x04, 0x12, 0x0E, 0x12, 0x04, 0x0A, 0x43, 0x00, 0x06, 0x10, 0x43, 0xF8, 0x60, 0x07, 0x98, 0x0D, 0x49, 0x00, 0x22, 0x10, 0x23, 0xAE, 0x46, 0xB7, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0x12, 0x48, 0x00, 0xE0, 0x16, 0x20, 0xB5, 0x49, 0x09, 0x18, 0x05, 0x98 ,
0xFF, 0xFF, 0xE2, 0x73, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x01, 0x62, 0x09, 0xB0, 0xF0, 0xBD, 0x5D, 0x0D, 0x1B, 0x00, 0x81, 0xE7, 0x02, 0x00, 0x09, 0xB4, 0x03, 0x00, 0x27, 0x1A, 0x02, 0x00, 0x2F, 0x7A, 0x02, 0x00, 0x02, 0x02, 0x00, 0x00, 0x05, 0x10, 0x00, 0x00, 0xCF, 0xF6, 0x00, 0x00, 0xD5, 0xF4, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x01, 0x7F, 0x03, 0x00, 0x91, 0x19, 0x02, 0x00, 0x50, 0x65, 0x08, 0x00, 0x71, 0xC0, 0x02, 0x00, 0x2A, 0x03, 0x00, 0x00, 0xF0, 0xB5, 0x8B, 0xB0, 0x07, 0x90, 0x05, 0x69, 0x47, 0x69, 0x0C, 0x20, 0x38, 0x1A, 0x08, 0x90, 0xF1, 0x49, 0x8D, 0x42, 0x16, 0xD1, 0x78, 0x68, 0x0F, 0x30, 0x00, 0x11, 0x00, 0x01, 0x78, 0x60, 0x38, 0x68, 0x0B, 0x28, 0x0E, 0xD8, 0x00, 0x23, 0x68, 0x46, 0x03, 0x70, 0x08, 0x98, 0x05, 0x22, 0x01, 0x24, 0xA6, 0x46, 0xE9, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0xE9, 0x48, 0xFF, 0x30, 0x95, 0x30, 0x07, 0x99, 0x08, 0x62, 0xE7, 0x48, 0x85, 0x42, 0x23, 0xD1 ,
0xF7, 0x48, 0x02, 0x78, 0x6C, 0x46, 0x22, 0x72, 0x43, 0x78, 0xFF, 0xFF, 0x78, 0x74, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x63, 0x72, 0x81, 0x78, 0xA1, 0x72, 0xC0, 0x78, 0xE0, 0x72, 0x00, 0x91, 0x01, 0x90, 0x03, 0x20, 0x32, 0x49, 0x01, 0x31, 0x01, 0x26, 0xB6, 0x46, 0xEF, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0x04, 0x20, 0x20, 0x70, 0x08, 0x98, 0xDA, 0x49, 0x00, 0x22, 0x02, 0xAB, 0x01, 0x24, 0xA6, 0x46, 0xD6, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0xD5, 0x48, 0xFF, 0x30, 0x95, 0x30, 0x07, 0x99, 0x08, 0x62, 0xE7, 0x48, 0x85, 0x42, 0x00, 0xD0, 0xEB, 0xE0, 0x03, 0x24, 0x20, 0x1C, 0x24, 0x49, 0x02, 0x31, 0x01, 0x22, 0x96, 0x46, 0xE3, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0xCC, 0x48, 0xFF, 0x30, 0x95, 0x30, 0x09, 0x90, 0x38, 0x68, 0xE1, 0x4E, 0x00, 0x28, 0x00, 0xD1, 0xC7, 0xE0, 0x01, 0x20, 0x86, 0x46, 0xDD, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x00, 0x28, 0x00, 0xD1, 0xBB, 0xE0, 0x32, 0x68, 0x20, 0x1C, 0x17, 0x49, 0x03, 0x31 ,
0x01, 0x23, 0x9E, 0x46, 0x16, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x30, 0x68, 0x00, 0x28, 0x3F, 0xD1, 0xD6, 0x4C, 0x2E, 0x20, 0xFF, 0xFF, 0x0E, 0x75, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x01, 0x19, 0xB8, 0x68, 0x03, 0x30, 0x08, 0x70, 0x38, 0x7A, 0x48, 0x70, 0xD3, 0x4D, 0x21, 0x1C, 0x0A, 0x94, 0x30, 0x31, 0x0A, 0x91, 0xB8, 0x68, 0x20, 0x18, 0x30, 0x30, 0x2A, 0x68, 0x30, 0x3A, 0x01, 0x23, 0x9E, 0x46, 0xCE, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x78, 0x68, 0x38, 0x18, 0x01, 0x1D, 0xBA, 0x68, 0x0A, 0x98, 0x01, 0x23, 0x9E, 0x46, 0xCE, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xB8, 0x68, 0x29, 0x68, 0x08, 0x18, 0x03, 0xE0, 0xAA, 0x05, 0x00, 0x00, 0xE7, 0x7E, 0x03, 0x00, 0x20, 0x18, 0xC4, 0x49, 0x0A, 0x79, 0x02, 0x70, 0x4A, 0x79, 0x42, 0x70, 0x8A, 0x79, 0x82, 0x70, 0xC9, 0x79, 0xC1, 0x70, 0x04, 0x30, 0x0F, 0x21, 0x41, 0x1A, 0x0A, 0x78, 0xBB, 0x68, 0x9A, 0x18, 0x0A, 0x70, 0x00, 0x1B, 0x00, 0x04, 0x00, 0x0C, 0x28, 0x60 ,
0x01, 0x20, 0x30, 0x60, 0x02, 0x20, 0x01, 0x1C, 0x11, 0x22, 0x01, 0x24, 0xA6, 0x46, 0xB7, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x06, 0x1C, 0x63, 0xD4, 0x03, 0x20, 0xA6, 0x46, 0xB5, 0x49, 0xFF, 0xFF, 0xA4, 0x75, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xFE, 0x44, 0x08, 0x47, 0x07, 0x1C, 0x00, 0x21, 0xB9, 0x42, 0x51, 0xD0, 0x2B, 0x22, 0xA6, 0x46, 0xB1, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x0C, 0x20, 0xC0, 0x19, 0xAC, 0x21, 0x71, 0x43, 0x15, 0x4A, 0x55, 0x18, 0x68, 0x63, 0x00, 0x21, 0x18, 0x22, 0xA6, 0x46, 0xAB, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xA4, 0x48, 0x02, 0x68, 0x68, 0x6B, 0x42, 0x60, 0x39, 0x1C, 0xAC, 0x31, 0x01, 0x60, 0x00, 0x68, 0x9F, 0x49, 0xA6, 0x46, 0xA5, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x00, 0x21, 0x03, 0xA8, 0x10, 0x22, 0xA6, 0x46, 0xA1, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xE0, 0x21, 0x68, 0x46, 0x01, 0x74, 0x00, 0x21, 0x41, 0x74, 0x81, 0x74, 0xFB, 0x21, 0xC1, 0x74, 0xF1, 0x49, 0xC1, 0x81, 0x02, 0x21 ,
0x81, 0x81, 0x69, 0x6B, 0x01, 0xE0, 0x14, 0x0D, 0x1B, 0x00, 0xCA, 0x68, 0x01, 0x20, 0xC0, 0x03, 0x10, 0x43, 0xC8, 0x60, 0x48, 0x68, 0x00, 0x90, 0x00, 0x22, 0x30, 0x1C, 0x39, 0x1C, 0x03, 0xAB, 0xA6, 0x46, 0xE8, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0xFF, 0xFF, 0x3A, 0x76, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x05, 0x1C, 0x30, 0x06, 0x00, 0x16, 0xA6, 0x46, 0xE6, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x38, 0x1C, 0xA6, 0x46, 0xF0, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x11, 0xE0, 0x30, 0x06, 0x00, 0x16, 0xA6, 0x46, 0xE0, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x01, 0x20, 0xC5, 0x43, 0x08, 0xE0, 0x05, 0x1C, 0x06, 0xE0, 0x00, 0x20, 0x00, 0x21, 0xCD, 0x43, 0x01, 0xE0, 0x00, 0x20, 0x05, 0x1C, 0x30, 0x60, 0x00, 0x23, 0x68, 0x46, 0x03, 0x70, 0x2A, 0x06, 0x12, 0x0E, 0x08, 0x98, 0x73, 0x49, 0x01, 0x24, 0xA6, 0x46, 0x5D, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0x07, 0x98, 0x09, 0x99, 0x01, 0x62, 0x0B, 0xB0, 0xF0, 0xBD, 0xC0, 0x46, 0x50, 0x19 ,
0x1B, 0x00, 0x29, 0x16, 0x01, 0x00, 0xC1, 0x18, 0x01, 0x00, 0xF1, 0x1B, 0x01, 0x00, 0xF3, 0x1C, 0x02, 0x00, 0x7B, 0xC0, 0x02, 0x00, 0x91, 0xF0, 0x00, 0x00, 0xFE, 0xB5, 0x07, 0x1C, 0x7D, 0x69, 0xBE, 0x69, 0x0C, 0x20, 0x30, 0x1A, 0x01, 0x90, 0x0A, 0x2D, 0x19, 0xD1, 0x32, 0x68, 0xE1, 0x48, 0x02, 0x60, 0xFF, 0xFF, 0xD0, 0x76, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x03, 0x20, 0xE1, 0x49, 0x01, 0x24, 0xA6, 0x46, 0xF0, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xA6, 0x46, 0xDE, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x0A, 0x20, 0x00, 0x21, 0x01, 0x9A, 0xA6, 0x46, 0xEC, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xDA, 0x48, 0xF5, 0x21, 0x89, 0x00, 0x08, 0x18, 0x38, 0x62, 0x03, 0x2D, 0x7A, 0xD1, 0xD7, 0x48, 0xF5, 0x21, 0x89, 0x00, 0x08, 0x18, 0x02, 0x90, 0x70, 0x68, 0x00, 0x28, 0x0C, 0xD1, 0x00, 0x21, 0xD3, 0x48, 0x01, 0x60, 0xD3, 0x48, 0x00, 0x68, 0x00, 0x28, 0x61, 0xD0, 0x01, 0x21, 0x8E, 0x46, 0xD1, 0x49, 0xFE, 0x44, 0x08, 0x47 ,
0x5B, 0xE0, 0xD0, 0x48, 0xB1, 0x68, 0x01, 0x60, 0xF1, 0x68, 0x41, 0x60, 0x31, 0x69, 0x81, 0x60, 0x71, 0x69, 0xC1, 0x60, 0xB1, 0x69, 0xC1, 0x63, 0xF1, 0x69, 0x01, 0x64, 0x31, 0x6A, 0xC1, 0x64, 0x01, 0x24, 0xA6, 0x46, 0xC9, 0x48, 0xFE, 0x44, 0x00, 0x47, 0xA6, 0x46, 0xC8, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x70, 0x68, 0x7D, 0x25, 0xED, 0x00, 0xA8, 0x42, 0x21, 0xD8, 0xFF, 0xFF, 0x66, 0x77, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x01, 0x28, 0x18, 0xD0, 0x02, 0x28, 0x05, 0xD0, 0x28, 0x1C, 0xA6, 0x46, 0xC2, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x1C, 0xE0, 0xBD, 0x48, 0x00, 0x23, 0x19, 0x1C, 0x59, 0x43, 0x3E, 0x22, 0x4A, 0x43, 0x82, 0x83, 0x02, 0x30, 0x01, 0x33, 0x10, 0x2B, 0xF6, 0xDB, 0xA6, 0x46, 0xB8, 0x48, 0xFE, 0x44, 0x00, 0x47, 0xB9, 0x48, 0x0D, 0xE0, 0xB9, 0x4D, 0x28, 0x1C, 0xA6, 0x46, 0xB6, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x04, 0xE0, 0xA6, 0x46, 0xB3, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x75, 0x68, 0xB2, 0x48 ,
0x05, 0x60, 0x05, 0x1C, 0xAB, 0x4E, 0x30, 0x68, 0x00, 0x28, 0x06, 0xD1, 0xB1, 0x48, 0x00, 0x68, 0xA6, 0x46, 0xB0, 0x49, 0xFE, 0x44, 0x08, 0x47, 0x30, 0x60, 0x00, 0x94, 0x2B, 0x68, 0xAE, 0x49, 0xAF, 0x4A, 0xA6, 0x46, 0xAF, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0xA0, 0x48, 0x04, 0x60, 0x03, 0x20, 0x00, 0x21, 0x01, 0x9A, 0x01, 0x23, 0x9E, 0x46, 0xAC, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x02, 0x98, 0x38, 0x62, 0xFE, 0xBD, 0xC0, 0x46, 0xFF, 0xFF, 0xFC, 0x77, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0xA3, 0xC0, 0x02, 0x00, 0xA9, 0xE9, 0x00, 0x00, 0x07, 0x02, 0x00, 0x00, 0x30, 0xB5, 0x05, 0x1C, 0x00, 0x20, 0x01, 0x24, 0xA6, 0x46, 0xA3, 0x49, 0xFE, 0x44, 0x08, 0x47, 0xA6, 0x46, 0xA2, 0x49, 0xFE, 0x44, 0x08, 0x47, 0xA6, 0x46, 0xA1, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x7D, 0x21, 0xC9, 0x00, 0xA6, 0x46, 0xA0, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0x87, 0x49, 0x2E, 0x31, 0x08, 0x18, 0x9C, 0x49, 0x08, 0x80 ,
0x9D, 0x48, 0x0A, 0x30, 0x28, 0x62, 0x30, 0xBD, 0xC0, 0x46, 0xE4, 0x62, 0x08, 0x00, 0x13, 0x7F, 0x03, 0x00, 0x11, 0x10, 0x00, 0x00, 0xDD, 0x7E, 0x03, 0x00, 0xB9, 0x90, 0x00, 0x00, 0x6C, 0x64, 0x08, 0x00, 0x74, 0x64, 0x08, 0x00, 0x70, 0x64, 0x08, 0x00, 0x6D, 0xC6, 0x03, 0x00, 0x08, 0x19, 0x1B, 0x00, 0x11, 0x18, 0x02, 0x00, 0xD1, 0x78, 0x02, 0x00, 0xC9, 0xBA, 0x03, 0x00, 0x09, 0xB4, 0x03, 0x00, 0xFE, 0xB5, 0x02, 0x90, 0x45, 0x69, 0x68, 0x46, 0x01, 0x21, 0x8E, 0x46, 0x8A, 0x49, 0xFF, 0xFF, 0x92, 0x78, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0xFE, 0x44, 0x08, 0x47, 0x8A, 0x48, 0x04, 0x1C, 0x68, 0x68, 0x01, 0x69, 0x4A, 0x78, 0x00, 0x27, 0x3E, 0x1C, 0x20, 0x88, 0x40, 0x08, 0x22, 0xD3, 0x20, 0x1D, 0x89, 0x1C, 0x01, 0x23, 0x9E, 0x46, 0x84, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x00, 0x28, 0x07, 0xD1, 0x68, 0x68, 0x00, 0x69, 0x40, 0x78, 0x21, 0x88, 0x09, 0x04, 0x89, 0x16, 0x81, 0x42, 0x3D, 0xD0, 0x02, 0x20 ,
0x00, 0x5F, 0x00, 0x99, 0x08, 0x1A, 0x00, 0x04, 0x00, 0x14, 0x3C, 0x28, 0x03, 0xDD, 0x20, 0x88, 0x40, 0x10, 0x40, 0x00, 0x20, 0x80, 0x78, 0x1C, 0x07, 0x06, 0x3F, 0x0E, 0x68, 0x68, 0x01, 0x69, 0x4A, 0x78, 0x2A, 0x34, 0x01, 0x36, 0x14, 0x2E, 0xD5, 0xDB, 0x00, 0x2A, 0x02, 0xD1, 0xAB, 0x20, 0x40, 0x00, 0x50, 0xE0, 0x00, 0x9B, 0x6E, 0x48, 0x14, 0x21, 0x00, 0x22, 0x04, 0x88, 0x64, 0x08, 0x03, 0xD3, 0x2A, 0x30, 0x01, 0x32, 0x01, 0x39, 0xF8, 0xD1, 0x12, 0x06, 0x12, 0x0E, 0x14, 0x2F, 0x16, 0xD1, 0x67, 0x48, 0x00, 0x88, 0x00, 0x06, 0x44, 0x16, 0xFF, 0xFF, 0x28, 0x79, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x65, 0x49, 0x00, 0x22, 0x01, 0x20, 0x4E, 0x8D, 0x36, 0x06, 0x76, 0x16, 0xA6, 0x42, 0x02, 0xDD, 0x34, 0x1C, 0x02, 0x06, 0x12, 0x0E, 0x2A, 0x31, 0x01, 0x30, 0x14, 0x28, 0xF3, 0xDB, 0x02, 0xE0, 0x32, 0x06, 0x12, 0x0E, 0x00, 0x9B, 0x2A, 0x20, 0x42, 0x43, 0x5B, 0x48, 0x11, 0x18, 0x0C, 0x88, 0x01, 0x20 ,
0x20, 0x43, 0x00, 0x04, 0x00, 0x0C, 0x08, 0x80, 0xFE, 0x24, 0xA0, 0x43, 0x14, 0x24, 0x64, 0x57, 0x64, 0x06, 0x24, 0x0E, 0x04, 0x43, 0x53, 0x48, 0x14, 0x52, 0x14, 0x18, 0x63, 0x80, 0x08, 0x88, 0x80, 0x05, 0x82, 0x0D, 0x68, 0x68, 0x00, 0x69, 0x40, 0x78, 0x80, 0x02, 0x10, 0x43, 0x08, 0x80, 0x68, 0x68, 0x02, 0x69, 0x20, 0x1D, 0x91, 0x1C, 0x52, 0x78, 0x01, 0x23, 0x9E, 0x46, 0x4C, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x02, 0x98, 0x04, 0x61, 0xFE, 0x20, 0x48, 0x49, 0x09, 0x18, 0x02, 0x98, 0x01, 0x62, 0xFE, 0xBD, 0x82, 0x69, 0x41, 0x69, 0x03, 0x69, 0x02, 0x2B, 0x0A, 0xD1, 0x01, 0x2A, 0x01, 0xD1, 0x00, 0x29, 0xFF, 0xFF, 0xBE, 0x79, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x2A, 0x04, 0xD1, 0x00, 0x29, 0x02, 0xD1, 0x11, 0x21, 0x00, 0xE0, 0x06, 0x21, 0x41, 0x61, 0xF7, 0x46, 0xC0, 0x46, 0x14, 0xE9, 0x00, 0x00, 0xC9, 0x18, 0x02, 0x00, 0x49, 0x19, 0x01, 0x00, 0x30, 0xB5, 0x05, 0x1C, 0x3A, 0x48 ,
0x00, 0x78, 0x00, 0x28, 0x04, 0xD0, 0x01, 0x20, 0x86, 0x46, 0x38, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x01, 0x24, 0xA6, 0x46, 0x37, 0x48, 0xFE, 0x44, 0x00, 0x47, 0xA6, 0x46, 0x36, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x35, 0x48, 0x0E, 0x30, 0x28, 0x62, 0x30, 0xBD, 0x2F, 0x7A, 0x02, 0x00, 0x18, 0xB5, 0x43, 0x69, 0x81, 0x69, 0x32, 0x48, 0x81, 0x29, 0x00, 0xD1, 0x0B, 0x38, 0x00, 0x21, 0x00, 0x91, 0x1A, 0x68, 0x9B, 0x68, 0x01, 0x24, 0xA6, 0x46, 0x2E, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0x18, 0xBD, 0x18, 0xB5, 0x40, 0x69, 0x00, 0x21, 0x00, 0x91, 0x02, 0x68, 0x83, 0x68, 0x28, 0x48, 0x01, 0x30, 0x01, 0x24, 0xA6, 0x46, 0x27, 0x4C, 0xFE, 0x44, 0x20, 0x47, 0x18, 0xBD, 0xC0, 0x46, 0xFF, 0xFF, 0x54, 0x7A, 0x08, 0x00, 0x96, 0x00, 0x00, 0x00, 0x30, 0x63, 0x08, 0x00, 0xAE, 0x05, 0x00, 0x00, 0x19, 0x9E, 0x00, 0x00, 0xB9, 0xEC, 0x00, 0x00, 0x74, 0x3F, 0x08, 0x00, 0x80, 0x3F, 0x08, 0x00, 0xB7, 0x5D, 0x03, 0x00, 0x00, 0x00 ,
0x1B, 0x00, 0xD3, 0x8E, 0x00, 0x00, 0xF7, 0xC6, 0x00, 0x00, 0xE5, 0x90, 0x00, 0x00, 0x68, 0x64, 0x08, 0x00, 0xC0, 0x27, 0x09, 0x00, 0xA0, 0x3B, 0x08, 0x00, 0x3D, 0x5D, 0x03, 0x00, 0x19, 0xC6, 0x00, 0x00, 0xE8, 0x3A, 0x08, 0x00, 0x81, 0x5D, 0x03, 0x00, 0xE7, 0x7E, 0x03, 0x00, 0xCF, 0xF6, 0x00, 0x00, 0x4B, 0x4F, 0x03, 0x00, 0x6B, 0xC0, 0x03, 0x00, 0x95, 0x1E, 0x01, 0x00, 0xDA, 0x40, 0x08, 0x00, 0x55, 0xAA, 0x03, 0x00, 0x0D, 0x91, 0x00, 0x00, 0xD7, 0x56, 0x03, 0x00, 0x08, 0x51, 0x08, 0x00, 0x8F, 0xC6, 0x03, 0x00, 0x65, 0xB8, 0x00, 0x00, 0x09, 0xB4, 0x03, 0x00, 0x84, 0x17, 0x1B, 0x00, 0xB5, 0x86, 0x01, 0x00, 0x3D, 0x47, 0x02, 0x00, 0x73, 0x49, 0x02, 0x00, 0x5F, 0x90, 0x00, 0x00, 0x0E, 0x10, 0x00, 0x00, 0xF7, 0xF6, 0xFF, 0xFF, 0xEA, 0x7A, 0x08, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x76, 0xFF, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x58, 0xFF ,
0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x97, 0xFF, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x81, 0xFF, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0xB4, 0xFE, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x7F, 0xFC, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x35, 0xFB, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0xEB, 0xFA, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x64, 0xFE, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0x52, 0xFB, 0xFF, 0xBD, 0xFF, 0xB5, 0x68, 0x46, 0xFF, 0xF7, 0xB0, 0xFD, 0xFF, 0xBD, 0x78, 0x7B, 0x08, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0xB5, 0xF8, 0xF0, 0x43, 0xFA, 0x00, 0xBD, 0x35, 0x66, 0x08, 0x00, 0x67, 0x66, 0x08, 0x00, 0x71, 0x65, 0x08, 0x00, 0x4D, 0x66, 0x08, 0x00, 0x25, 0x64, 0x08, 0x00, 0x81, 0x66, 0x08, 0x00, 0x8D, 0x66, 0x08, 0x00, 0x99, 0x66, 0x08, 0x00, 0x87, 0x67, 0x08, 0x00, 0xA7, 0x67, 0x08, 0x00, 0xD1, 0x67 ,
0x08, 0x00, 0x1B, 0x68, 0x08, 0x00, 0x57, 0x68, 0x08, 0x00, 0x3D, 0x69, 0x08, 0x00, 0xFD, 0x6B, 0x08, 0x00, 0x17, 0x6C, 0x08, 0x00, 0x39, 0x6C, 0x08, 0x00, 0x61, 0x6C, 0x08, 0x00, 0xA1, 0x68, 0x08, 0x00, 0x95, 0x6C, 0x08, 0x00, 0xEB, 0x6D, 0x08, 0x00, 0x43, 0x6E, 0x08, 0x00, 0x6D, 0x6E, 0x08, 0x00, 0x3D, 0x6F, 0x08, 0x00, 0x1D, 0x6D, 0x08, 0x00, 0xE5, 0x6E, 0x08, 0x00, 0x11, 0x6E, 0x08, 0x00, 0xC9, 0x6F, 0x08, 0x00, 0x65, 0x70, 0x08, 0x00, 0x31, 0x64, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xF3, 0x1A, 0x00, 0x80, 0x00, 0x00, 0x00, 0xB2, 0x4E, 0x01, 0x00, 0x5A, 0xC1, 0x00, 0x00, 0x96, 0x1A, 0x01, 0x00, 0x22, 0x0B, 0x02, 0x00, 0x60, 0xD0, 0x01, 0x00, 0x06, 0x1A, 0x00, 0x00, 0xB8, 0xC6, 0x01, 0x00, 0xD8, 0x42, 0x03, 0x00, 0x16, 0x42, 0x03, 0x00, 0xEE, 0xDB, 0x00, 0x00, 0x62, 0xDC, 0x00, 0x00, 0xC8, 0xE1, 0x00, 0x00, 0x8A, 0x17, 0x02, 0x00, 0x38, 0xBE, 0x00, 0x00 ,
0x26, 0xC6, 0x00, 0x00, 0x56, 0xC2, 0x00, 0x00, 0x62, 0x12, 0x03, 0x00, 0xE4, 0xF4, 0x01, 0x00, 0x3A, 0xEC, 0x00, 0x00, 0x5E, 0x92, 0x00, 0x00, 0xFE, 0xE8, 0x02, 0x00, 0x18, 0x7F, 0x00, 0x00, 0x64, 0xEC, 0x01, 0x00, 0xFE, 0x44, 0x03, 0x00, 0x1C, 0x94, 0x00, 0x00, 0xA8, 0x66, 0x03, 0x00, 0x74, 0xE9, 0x02, 0x00, 0x68, 0x1E, 0x01, 0x00, 0xBC, 0xDA, 0x00, 0x00, 0xEA, 0xE1, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x18, 0xF0, 0xB5, 0x8A, 0xB0, 0xE3, 0x4C, 0x03, 0x20, 0x22, 0x78, 0x63, 0x78, 0xE3, 0x49, 0x01, 0x39, 0x01, 0x25, 0xAE, 0x46, 0xE0, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0xA2, 0x78, 0xE3, 0x78, 0x03, 0x20, 0xDE, 0x49, 0xAE, 0x46, 0xDC, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0x03, 0x20, 0xDB, 0x49, 0x01, 0x31, 0xAE, 0x46, 0xDB, 0x4A, 0xFE, 0x44, 0x10, 0x47, 0xDA, 0x48, 0x21, 0x78, 0x01, 0x70, 0x61, 0x78, 0x41, 0x70 ,
0xE1, 0x78, 0xC1, 0x70, 0xA1, 0x78, 0x81, 0x70, 0xD9, 0x48, 0x04, 0x1C, 0x33, 0x3C, 0x20, 0x1C, 0x00, 0x21, 0xDC, 0x22, 0xAE, 0x46, 0xD3, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x84, 0x20, 0xA0, 0x70, 0x05, 0x27, 0xE7, 0x71, 0x0C, 0x26, 0x26, 0x73, 0x0D, 0x20, 0x00, 0x19, 0xB0, 0xA1, 0x32, 0x1C, 0xAE, 0x46, 0xCD, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x04, 0x20, 0x60, 0x76, 0x1A, 0x20, 0x00, 0x19, 0xAF, 0xA1, 0x08, 0x91, 0x04, 0x22, 0xAE, 0x46, 0xC8, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xA7, 0x77, 0xFF, 0xFF, 0x96, 0x00, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0x1F, 0x34, 0xAC, 0xA1, 0x09, 0x91, 0x20, 0x1C, 0x3A, 0x1C, 0xAE, 0x46, 0xC3, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xE6, 0x71, 0x28, 0x1C, 0x60, 0x72, 0x11, 0x20, 0x20, 0x73, 0x94, 0x20, 0x60, 0x73, 0xC0, 0x25, 0x65, 0x74, 0xA6, 0x74, 0x09, 0x22, 0xE2, 0x74, 0xBC, 0x4C, 0x20, 0x1C, 0xA3, 0xA1, 0x01, 0x23, 0x9E, 0x46, 0xB9, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x07, 0x22 ,
0x62, 0x72, 0xB7, 0x4C, 0x0A, 0x34, 0x20, 0x1C, 0xA1, 0xA1, 0x01, 0x23, 0x9E, 0x46, 0xB3, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x04, 0x20, 0xE0, 0x71, 0xB2, 0x4C, 0x12, 0x34, 0x20, 0x1C, 0x08, 0x99, 0x04, 0x22, 0x01, 0x23, 0x9E, 0x46, 0xAD, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x27, 0x71, 0xAC, 0x4C, 0x17, 0x34, 0x20, 0x1C, 0x09, 0x99, 0x3A, 0x1C, 0x01, 0x23, 0x9E, 0x46, 0xA8, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xE6, 0x71, 0x01, 0x20, 0x60, 0x72, 0x11, 0x20, 0x20, 0x73, 0x94, 0x20, 0x60, 0x73, 0x02, 0x20, 0xE0, 0x73, 0x25, 0x74, 0x66, 0x74, 0xA5, 0x74, 0xFF, 0xFF, 0x2C, 0x01, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0x2F, 0x26, 0xE6, 0x74, 0x10, 0x20, 0x60, 0x75, 0x80, 0x27, 0xA7, 0x75, 0x01, 0x20, 0xE0, 0x75, 0x11, 0x20, 0xA0, 0x76, 0x94, 0x20, 0xE0, 0x76, 0x24, 0x20, 0x60, 0x77, 0x0A, 0x22, 0xA2, 0x77, 0x99, 0x4C, 0x36, 0x34, 0x20, 0x1C, 0x85, 0xA1, 0x01, 0x23, 0x9E, 0x46, 0x95, 0x4B, 0xFE, 0x44, 0x18, 0x47 ,
0x18, 0x22, 0xA2, 0x72, 0x94, 0x4C, 0x41, 0x34, 0x20, 0x1C, 0x82, 0xA1, 0x01, 0x23, 0x9E, 0x46, 0x90, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0x25, 0x76, 0x66, 0x76, 0x21, 0x20, 0xE0, 0x76, 0x27, 0x77, 0x01, 0x20, 0x60, 0x77, 0x8C, 0x48, 0x61, 0x30, 0x11, 0x21, 0x01, 0x70, 0x94, 0x21, 0x41, 0x70, 0x0F, 0x26, 0xC6, 0x70, 0x04, 0x21, 0x01, 0x72, 0xD2, 0x21, 0x41, 0x72, 0x06, 0x21, 0x81, 0x72, 0x85, 0x4C, 0x6C, 0x34, 0x20, 0x1C, 0x7A, 0xA1, 0x06, 0x22, 0x01, 0x23, 0x9E, 0x46, 0x80, 0x4B, 0xFE, 0x44, 0x18, 0x47, 0xA5, 0x71, 0x1E, 0x20, 0xE0, 0x71, 0x25, 0x72, 0x9E, 0x20, 0x60, 0x72, 0x01, 0x20, 0xE0, 0x72, 0xFF, 0xFF, 0xC2, 0x01, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0x27, 0x73, 0x60, 0x73, 0x11, 0x20, 0x20, 0x74, 0x94, 0x20, 0x60, 0x74, 0x04, 0x20, 0xE0, 0x74, 0xB3, 0x20, 0x78, 0x49, 0x08, 0x60, 0x00, 0x24, 0x31, 0x06, 0x09, 0x0E, 0x00, 0x20, 0x02, 0xAA, 0x01, 0x23, 0x9E, 0x46, 0x75, 0x4B, 0xFE, 0x44 ,
0x18, 0x47, 0x68, 0x46, 0x00, 0x89, 0x40, 0x08, 0x0E, 0xD3, 0xA1, 0x00, 0x0F, 0x20, 0xC2, 0x43, 0x68, 0x46, 0x03, 0x89, 0x13, 0x40, 0x03, 0xAD, 0x6B, 0x52, 0x40, 0x89, 0x10, 0x40, 0x69, 0x44, 0xC8, 0x81, 0x60, 0x1C, 0x04, 0x04, 0x24, 0x0C, 0x01, 0x3E, 0x0B, 0x2E, 0xE0, 0xDA, 0x60, 0x1E, 0x02, 0x04, 0x12, 0x0C, 0x1C, 0xD0, 0x15, 0x1C, 0x03, 0xAB, 0x01, 0x21, 0x9E, 0x88, 0x88, 0x00, 0x02, 0xAF, 0x3F, 0x5A, 0xB7, 0x42, 0x0B, 0xDA, 0xBC, 0x46, 0x07, 0x1C, 0x6F, 0x44, 0x7F, 0x89, 0x68, 0x44, 0x06, 0x81, 0x08, 0x30, 0xDE, 0x88, 0x46, 0x80, 0x60, 0x46, 0x98, 0x80, 0xDF, 0x80, 0x04, 0x33, 0x48, 0x1C, 0x01, 0x04, 0x09, 0x0C, 0x01, 0x3D, 0xE7, 0xD1, 0x01, 0x3A, 0xFF, 0xFF, 0x58, 0x02, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0xE2, 0xD1, 0x68, 0x46, 0x81, 0x89, 0xC2, 0x89, 0x51, 0x18, 0x09, 0x04, 0x09, 0x0C, 0x56, 0x4D, 0x29, 0x80, 0x56, 0x4B, 0x82, 0x89, 0x9A, 0x1A, 0xC0, 0x89, 0x10, 0x1A, 0x68, 0x80 ,
0x28, 0x79, 0x00, 0x90, 0x2A, 0x88, 0x58, 0x1A, 0x03, 0x04, 0x1B, 0x0C, 0x03, 0x20, 0x46, 0x49, 0x11, 0x39, 0x01, 0x26, 0xB6, 0x46, 0x4E, 0x4E, 0xFE, 0x44, 0x30, 0x47, 0x02, 0x2C, 0x30, 0xDB, 0x67, 0x1E, 0x03, 0xAE, 0x01, 0x24, 0x20, 0x1C, 0x09, 0x90, 0x09, 0x98, 0x80, 0x00, 0x02, 0xA9, 0x09, 0x5A, 0xB0, 0x88, 0xF2, 0x88, 0x12, 0x18, 0x8A, 0x42, 0x1A, 0xDA, 0x06, 0x20, 0x60, 0x43, 0x42, 0x4B, 0x18, 0x18, 0x02, 0x80, 0x02, 0x88, 0x89, 0x1A, 0x41, 0x80, 0x01, 0x21, 0x01, 0x71, 0x41, 0x88, 0x00, 0x91, 0x01, 0x21, 0x01, 0x91, 0x22, 0x1C, 0x03, 0x88, 0x03, 0x20, 0x32, 0x49, 0x10, 0x39, 0x01, 0x25, 0xAE, 0x46, 0x3B, 0x4D, 0xFE, 0x44, 0x28, 0x47, 0x60, 0x1C, 0x04, 0x04, 0x24, 0x0C, 0x04, 0x36, 0x09, 0x98, 0x40, 0x1C, 0xFF, 0xFF, 0xEE, 0x02, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0E, 0x09, 0x90, 0x01, 0x3F, 0xD3, 0xD1, 0x00, 0x24, 0x35, 0x48, 0x04, 0x70, 0x35, 0x48, 0x04, 0x70 ,
0x35, 0x48, 0x04, 0x70, 0x35, 0x48, 0x04, 0x70, 0x01, 0x20, 0x86, 0x46, 0x34, 0x48, 0xFE, 0x44, 0x00, 0x47, 0x33, 0x49, 0x22, 0x1C, 0x08, 0x68, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x20, 0x90, 0x40, 0x04, 0x43, 0x04, 0x31, 0x01, 0x32, 0x20, 0x2A, 0xF5, 0xD3, 0x2E, 0x48, 0x04, 0x60, 0x0A, 0xB0, 0xF0, 0xBD, 0x5F, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2D, 0x69, 0x6E, 0x66, 0x6F, 0x00, 0xC0, 0x46, 0xC0, 0x5F, 0x75, 0x64, 0x70, 0x00, 0xC0, 0x46, 0xC0, 0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x00, 0xC0, 0x46, 0x5F, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x00, 0xC0, 0x46, 0x5F, 0x64, 0x6E, 0x73, 0x2D, 0x73, 0x64, 0x00, 0x64, 0x65, 0x76, 0x3D, 0x43, 0x43, 0x33, 0x30, 0x30, 0x30, 0x00, 0xC0, 0x76, 0x65, 0x6E, 0x64, 0x6F, 0x72, 0x3D, 0x54, 0x65, 0x78, 0x61, 0x73, 0x2D, 0x49, 0x6E, 0x73, 0xFF, 0xFF, 0x84, 0x03, 0x18, 0x00, 0x96, 0x00, 0x00, 0x00, 0x74, 0x72, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x00, 0xC0 ,
0x46, 0xC0, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0xC0, 0x00, 0x00, 0x18, 0x00, 0xF3, 0x7E, 0x03, 0x00, 0xC6, 0x05, 0x00, 0x00, 0xDD, 0x7E, 0x03, 0x00, 0xE4, 0x62, 0x08, 0x00, 0xC9, 0xBA, 0x03, 0x00, 0x09, 0xB4, 0x03, 0x00, 0xA7, 0x64, 0x08, 0x00, 0x70, 0x64, 0x08, 0x00, 0xDD, 0x0A, 0x02, 0x00, 0x48, 0x32, 0x08, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x7F, 0x03, 0x00, 0x13, 0x7F, 0x03, 0x00, 0xE8, 0x62, 0x08, 0x00, 0xE9, 0x62, 0x08, 0x00, 0xEA, 0x62, 0x08, 0x00, 0xEB, 0x62, 0x08, 0x00, 0xED, 0x03, 0x18, 0x00, 0x80, 0x7B, 0x08, 0x00, 0x84, 0xF3, 0x1A, 0x00, 0x0D, 0x49, 0x0E, 0x48, 0x88, 0x67, 0x0E, 0x48, 0x88, 0x64, 0x0E, 0x48, 0x48, 0x64, 0x0E, 0x48, 0xC8, 0x64, 0x0E, 0x48, 0x08, 0x65, 0x11, 0x48, 0x02, 0x1C, 0x04, 0x32, 0x0C, 0x4B, 0x13, 0x60, 0x0C, 0x4B, 0x93, 0x62, 0x0C, 0x4A, 0x8A, 0x66, 0x0D, 0x49, 0x01, 0x60, 0x0D, 0x48, 0xFF, 0xFF, 0x1A, 0x04, 0x18, 0x00, 0x42, 0x00, 0x00, 0x00 ,
0x0E, 0x49, 0x01, 0x60, 0x0E, 0x49, 0x41, 0x60, 0xF7, 0x46, 0x1C, 0x21, 0x08, 0x00, 0x33, 0x7B, 0x08, 0x00, 0x29, 0x7B, 0x08, 0x00, 0x1F, 0x7B, 0x08, 0x00, 0x51, 0x7B, 0x08, 0x00, 0x47, 0x7B, 0x08, 0x00, 0x3D, 0x7B, 0x08, 0x00, 0x15, 0x7B, 0x08, 0x00, 0xF7, 0x7A, 0x08, 0x00, 0x50, 0x23, 0x08, 0x00, 0xED, 0x7A, 0x08, 0x00, 0x58, 0x26, 0x08, 0x00, 0x0B, 0x7B, 0x08, 0x00, 0x01, 0x7B, 0x08, 0x00, 0xFF, 0xFF };

unsigned short drv_length = 8168;


#ifdef TEENSY3 
const uint8_t fw_patch[4616] = 
#else
PROGMEM prog_uchar fw_patch[4616] =
#endif
{ 0x00, 0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x15, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xB8, 0xF1, 0x90, 0x0F, 0xA4, 0x16, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x66, 0xE0, 0x04, 0xA8, 0x35, 0x1D, 0x21, 0xF0, 0x99, 0xFC, 0x68, 0x46, 0x23, 0xF0, 0x28, 0xFB, 0x9A, 0xF8, 0x00, 0x00, 0x01, 0x28, 0x07, 0xD1, 0x28, 0x46, 0x05, 0xF0, 0xC3, 0xFE, 0x01, 0x46, 0x01, 0xAA, 0x00, 0x20, 0x21, 0xF0, 0x50, 0xF9, 0x28, 0x46, 0x05, 0xF0, 0xBB, 0xFE, 0x01, 0xA9, 0x21, 0xF0, 0x2A, 0xFA, 0xE9, 0x79, 0x4F, 0xEA, 0xE0, 0x00, 0x40, 0xB2, 0x11, 0xB1, 0x00, 0xF1, 0x06, 0x00, 0x40, 0xB2, 0xA8, 0x71, 0x1F, 0x38, 0x40, 0x00, 0xE8, 0x71, 0x30, 0x46, 0x01, 0xF0, 0x0D, 0xFF, 0x10, 0xF1, 0x00, 0x09, 0x4F, 0xF0, 0x00, 0x01, 0x09, 0xD0, 0x28, 0x68, 0x40, 0x0C, 0x09, 0xD3, 0xE8, 0x68, 0xC0, 0x0B, 0x03, 0xD2, 0x48, 0x46, 0xFF, 0xF7, 0xDD, 0xFE, 0x01, 0x21, 0x28, 0x68, 0x40, 0x0C, 0x0A, 0xD2 ,
0x38, 0x68, 0x40, 0x1C, 0x38, 0x60, 0x20, 0x68, 0x6F, 0xF3, 0x0F, 0x00, 0x20, 0x60, 0x22, 0x68, 0x38, 0x68, 0x10, 0x43, 0x20, 0x60, 0xE8, 0x68, 0xC0, 0x0B, 0x0F, 0xD3, 0xD8, 0xF8, 0x00, 0x00, 0x00, 0xF1, 0x01, 0x00, 0xC8, 0xF8, 0x00, 0x00, 0x20, 0x68, 0x6F, 0xF3, 0x1F, 0x40, 0x20, 0x60, 0xD8, 0xF8, 0x00, 0x20, 0x20, 0x68, 0x40, 0xEA, 0x02, 0x40, 0x20, 0x60, 0x49, 0xB9, 0xB9, 0xF1, 0x00, 0x0F, 0x03, 0xD1, 0x30, 0x46, 0x07, 0xF0, 0xBE, 0xF9, 0x02, 0xE0, 0x48, 0x46, 0x07, 0xF0, 0x06, 0xFA, 0x6C, 0x17, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x68, 0x46, 0x0E, 0xF0, 0x85, 0xFB, 0x00, 0x9E, 0x00, 0x2E, 0x96, 0xD1, 0x05, 0xB0, 0xBD, 0xE8, 0xF0, 0x87, 0xC0, 0x46, 0x9C, 0x20, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x23, 0xF0, 0x7A, 0xFD, 0x74, 0x47, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0B, 0x21, 0x21, 0xF0, 0xCB, 0xF9, 0x20, 0x68, 0x18, 0x4B, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x21, 0xF0, 0x6C, 0xF8 ,
0x0A, 0xE0, 0x20, 0x68, 0x00, 0x68, 0x0C, 0x21, 0x40, 0xF0, 0x20, 0x00, 0x21, 0xF0, 0x64, 0xF8, 0x04, 0x62, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x20, 0x79, 0x1F, 0xF0, 0xA5, 0xFC, 0x69, 0xE0, 0x34, 0xAD, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x68, 0xFF, 0x29, 0x98, 0xAD, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x10, 0xD4, 0x21, 0xDC, 0xD3, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0xB5, 0x18, 0xF0, 0xFB, 0xFB, 0x00, 0xF0, 0x03, 0xF8, 0x00, 0xBD, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xDF, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0xF0, 0x3C, 0xFD, 0xC8, 0xF7, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x31, 0x2E, 0x31, 0x39, 0x2E, 0x33, 0x31, 0x34, 0x5F, 0x4E, 0x65, 0x77, 0x5F, 0x46, 0x54, 0x43, 0x5F, 0x6C, 0x65, 0x6E, 0x67, 0x74, 0x68, 0x5F, 0x6D, 0x6F, 0x64, 0x75, 0x6C, 0x61, 0x74, 0x69, 0x80, 0x7E, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0xDF, 0xF8, 0x58, 0x82, 0xF4, 0x7E, 0x01, 0x00, 0x04, 0x00 ,
0x00, 0x00, 0x7A, 0x48, 0x6B, 0x49, 0x9C, 0x7F, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x70, 0x51, 0x4D, 0xC4, 0x7F, 0x01, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x40, 0x49, 0x00, 0xF1, 0x52, 0x00, 0x3A, 0x4A, 0xA8, 0x81, 0x28, 0x83, 0xE8, 0x83, 0xE8, 0x84, 0xA8, 0x85, 0x2A, 0x60, 0x39, 0x48, 0x41, 0xF2, 0x11, 0x12, 0x2A, 0x85, 0x18, 0x90, 0x19, 0x91, 0x39, 0x49, 0x1A, 0x91, 0x39, 0x49, 0x1B, 0x91, 0x39, 0x49, 0x20, 0x46, 0xDF, 0xF8, 0xC4, 0x90, 0x1C, 0x91, 0x38, 0x49, 0xDF, 0xF8, 0xC0, 0xB0, 0x31, 0x4E, 0x1D, 0x91, 0x48, 0x80, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0D, 0xF0, 0x7C, 0xFA, 0xB4, 0x80, 0x01, 0x00, 0x34, 0x00, 0x00, 0x00, 0x34, 0x12, 0x66, 0x09, 0x84, 0x6B, 0x00, 0x20, 0x94, 0x70, 0x00, 0x20, 0xB4, 0x70, 0x00, 0x20, 0xC4, 0x78, 0x00, 0x20, 0x50, 0x7A, 0x00, 0x20, 0xFE, 0xFF, 0x03, 0x00, 0xA4, 0x70, 0x00, 0x20, 0xB0, 0x70, 0x00, 0x20, 0xB8, 0x70, 0x00, 0x20, 0x60, 0x55, 0x30, 0x80 ,
0x3C, 0x5C, 0x00, 0x20, 0x04, 0x74, 0x00, 0x20, 0x04, 0x4D, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x2D, 0xE9, 0xF0, 0x4F, 0xAD, 0xF1, 0x8C, 0x0D, 0x04, 0x68, 0x0F, 0x30, 0x03, 0x94, 0xFE, 0xF7, 0xDB, 0xFA, 0x04, 0xF1, 0x14, 0x00, 0x04, 0x90, 0x21, 0x7D, 0x00, 0x20, 0x21, 0xF0, 0x73, 0x01, 0x88, 0x29, 0x08, 0xBF, 0x01, 0x20, 0x05, 0x90, 0x03, 0x98, 0x00, 0x1D, 0x06, 0x90, 0x5D, 0x48, 0x00, 0x68, 0x01, 0x28, 0x40, 0xF0, 0xFA, 0x83, 0x5B, 0x4D, 0x5C, 0x48, 0xDF, 0xF8, 0x70, 0x91, 0x29, 0x68, 0xDF, 0xF8, 0x70, 0x81, 0xDF, 0xF8, 0x74, 0xA1, 0x88, 0x42, 0x21, 0xD1, 0x10, 0x22, 0x00, 0x21, 0x48, 0x46, 0x4F, 0x46, 0xFB, 0xF7, 0xB7, 0xFE, 0x10, 0x22, 0x00, 0x21, 0x40, 0x46, 0xFB, 0xF7, 0xB2, 0xFE, 0x54, 0x49, 0x08, 0x68, 0x40, 0xF4, 0x80, 0x10, 0x08, 0x60, 0x01, 0x20, 0x51, 0x46, 0x08, 0x60, 0x00, 0x21, 0x29, 0x60, 0x39, 0x78, 0x46, 0x46, 0x00, 0x91, 0x31, 0x78, 0x41, 0xF2, 0x11, 0x13, 0x04, 0x22 ,
0x01, 0x91, 0x07, 0x21, 0x02, 0x90, 0x03, 0x20, 0xF3, 0xF7, 0x41, 0xFC, 0x51, 0x46, 0x07, 0x91, 0x08, 0x68, 0x56, 0x49, 0xDF, 0xF8, 0x5C, 0xB1, 0x01, 0x28, 0x08, 0x91, 0x56, 0x49, 0xDF, 0xF8, 0x48, 0xA1, 0x09, 0x91, 0x55, 0x49, 0x0A, 0x91, 0x44, 0x49, 0x0B, 0x91, 0x44, 0x49, 0x0C, 0x91, 0x44, 0x49, 0x0D, 0x91, 0x44, 0x49, 0x0E, 0x91, 0x44, 0x49, 0x0F, 0x91, 0x44, 0x49, 0x10, 0x91, 0x44, 0x49, 0xCC, 0x4D, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x11, 0x91, 0x44, 0x49, 0x12, 0x91, 0x44, 0x49, 0x13, 0x91, 0x44, 0x49, 0x14, 0x91, 0x44, 0x49, 0x15, 0x91, 0x44, 0x49, 0x16, 0x91, 0x9F, 0x49, 0x17, 0x91, 0x9F, 0x49, 0x18, 0x91, 0x9F, 0x49, 0x19, 0x91, 0x9F, 0x49, 0x1A, 0x91, 0x9F, 0x49, 0x1B, 0x91, 0x9F, 0x49, 0x1C, 0x91, 0x9F, 0x49, 0x1D, 0x91, 0x9F, 0x49, 0x1E, 0x91, 0x9F, 0x49, 0x1F, 0x91, 0x40, 0xF0, 0x00, 0x81, 0x04, 0x98, 0x40, 0x78, 0x00, 0xF0, 0x03, 0x01, 0x01, 0x29, 0x40, 0xF0, 0xF9, 0x80 ,
0x04, 0x99, 0x09, 0x78, 0x01, 0xF0, 0x0C, 0x01, 0x08, 0x29, 0x40, 0xF0, 0xF2, 0x80, 0x06, 0x99, 0x09, 0x88, 0xA1, 0xF1, 0x3C, 0x01, 0x0E, 0xB2, 0x05, 0x99, 0x11, 0xB1, 0xA6, 0xF1, 0x02, 0x06, 0x36, 0xB2, 0xC0, 0x09, 0x4F, 0xF0, 0x00, 0x07, 0x15, 0xD3, 0x08, 0x3E, 0x36, 0xB2, 0x03, 0x2E, 0x10, 0xD0, 0x17, 0x2E, 0x0E, 0xD0, 0x08, 0x3E, 0x36, 0xB2, 0x03, 0x2E, 0x08, 0xD0, 0x17, 0x2E, 0x06, 0xD0, 0x36, 0x1F, 0x36, 0xB2, 0x03, 0x2E, 0x14, 0xBF, 0x17, 0x2E, 0x02, 0x27, 0x02, 0xE0, 0x03, 0x27, 0x00, 0xE0, 0x01, 0x27, 0x03, 0x2E, 0x18, 0xBF, 0x17, 0x2E, 0x04, 0x9A, 0x40, 0xF0, 0xC8, 0x80, 0x0A, 0x32, 0x12, 0xF8, 0x01, 0x1B, 0x05, 0x24, 0x12, 0xF8, 0x01, 0x3B, 0x4B, 0x40, 0x64, 0x1E, 0xD9, 0xB2, 0xF9, 0xD1, 0x81, 0xEA, 0x21, 0x11, 0x03, 0x2E, 0x94, 0x4E, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x0F, 0x01, 0x48, 0x46, 0x35, 0xD0, 0x43, 0x46, 0xCA, 0x5C, 0x52, 0x1C, 0xCA, 0x54, 0x0C, 0x18 ,
0x33, 0xE0, 0x48, 0x57, 0x02, 0x00, 0x04, 0x74, 0x00, 0x20, 0x34, 0x12, 0x66, 0x09, 0x58, 0x57, 0x02, 0x00, 0x68, 0x57, 0x02, 0x00, 0xC8, 0x48, 0x30, 0x80, 0x44, 0x57, 0x02, 0x00, 0x80, 0x57, 0x02, 0x00, 0x78, 0x57, 0x02, 0x00, 0x10, 0x58, 0x02, 0x00, 0x18, 0x58, 0x02, 0x00, 0x20, 0x58, 0x02, 0x00, 0x28, 0x58, 0x02, 0x00, 0x30, 0x58, 0x02, 0x00, 0x38, 0x58, 0x02, 0x00, 0xDC, 0x58, 0x02, 0x00, 0xDA, 0x58, 0x02, 0x00, 0x0C, 0x58, 0x02, 0x00, 0xE7, 0x58, 0x02, 0x00, 0xD8, 0x58, 0x02, 0x00, 0xE6, 0x58, 0x02, 0x00, 0x54, 0x57, 0x02, 0x00, 0xDE, 0x58, 0x02, 0x00, 0xE0, 0x58, 0x02, 0x00, 0x0C, 0x18, 0x20, 0x78, 0x40, 0x1C, 0x20, 0x70, 0x20, 0x78, 0x43, 0x46, 0x03, 0xEB, 0x01, 0x08, 0x0A, 0x28, 0x76, 0xDB, 0x98, 0xF8, 0x00, 0x00, 0x0A, 0x28, 0x72, 0xDB, 0x94, 0x48, 0x00, 0x25, 0x01, 0x60, 0x04, 0x98, 0x00, 0xF1, 0x0A, 0x09, 0x40, 0x78, 0x41, 0x08, 0x24, 0xBF, 0x04, 0x99, 0x09, 0x1D, 0x04, 0xD2 ,
0x80, 0x08, 0x2E, 0xBF, 0x49, 0x46, 0x04, 0x99, 0x10, 0x31, 0x0B, 0x98, 0x06, 0x22, 0xFA, 0xF7, 0xB9, 0xFC, 0x0C, 0x98, 0x06, 0x22, 0x49, 0x46, 0xFA, 0xF7, 0xB4, 0xFC, 0x9B, 0x48, 0x9A, 0x49, 0x5C, 0x4F, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x78, 0x08, 0x22, 0x08, 0x60, 0x58, 0x46, 0x07, 0x60, 0x0D, 0x98, 0x29, 0x46, 0xFB, 0xF7, 0xAF, 0xFD, 0x08, 0x22, 0x0E, 0x98, 0x29, 0x46, 0xFB, 0xF7, 0xAA, 0xFD, 0x08, 0x22, 0x0F, 0x98, 0x29, 0x46, 0xFB, 0xF7, 0xA5, 0xFD, 0x08, 0x22, 0x10, 0x98, 0x29, 0x46, 0xFB, 0xF7, 0xA0, 0xFD, 0x08, 0x22, 0x11, 0x98, 0x29, 0x46, 0xFB, 0xF7, 0x9B, 0xFD, 0x08, 0x22, 0x12, 0x98, 0x29, 0x46, 0xFB, 0xF7, 0x96, 0xFD, 0x07, 0x99, 0x02, 0x20, 0x08, 0x60, 0x13, 0x99, 0x28, 0x46, 0x08, 0x80, 0x08, 0x99, 0x08, 0x70, 0x14, 0x99, 0x08, 0x70, 0x15, 0x99, 0x08, 0x60, 0x16, 0x99, 0x08, 0x70, 0x17, 0x99, 0x08, 0x60, 0x18, 0x99, 0x08, 0x60, 0x19, 0x99, 0x08, 0x60, 0x09, 0x99 ,
0x08, 0x80, 0x0A, 0x99, 0x08, 0x80, 0x1A, 0x99, 0x08, 0x80, 0x7D, 0x49, 0x0D, 0x60, 0x1B, 0x99, 0x08, 0x70, 0x1C, 0x99, 0x08, 0x70, 0x1D, 0x99, 0x08, 0x70, 0x1E, 0x99, 0x08, 0x80, 0x1F, 0x99, 0x08, 0x80, 0x51, 0x46, 0x08, 0x80, 0x20, 0x78, 0x00, 0x96, 0x04, 0x22, 0x01, 0x90, 0x98, 0xF8, 0x00, 0x00, 0x41, 0xF2, 0x14, 0x13, 0x07, 0x21, 0x02, 0x90, 0x03, 0x20, 0xF3, 0xF7, 0x07, 0xFB, 0x07, 0x98, 0xA2, 0x49, 0x00, 0x68, 0x20, 0x91, 0xA2, 0x49, 0x05, 0x28, 0x21, 0x91, 0x9E, 0x49, 0x22, 0x91, 0x40, 0xF0, 0x37, 0x82, 0x04, 0x98, 0x40, 0x78, 0x24, 0x50, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x41, 0x08, 0x24, 0xBF, 0x04, 0x99, 0x09, 0x1D, 0x05, 0xD2, 0x80, 0x08, 0x27, 0xBF, 0x04, 0x99, 0x0A, 0x31, 0x04, 0x99, 0x10, 0x31, 0x0B, 0x98, 0xF8, 0xF7, 0x2D, 0xFC, 0x01, 0x28, 0x04, 0x98, 0x40, 0xF0, 0x23, 0x82, 0x40, 0x78, 0x00, 0xF0, 0x03, 0x00, 0x03, 0x28, 0x18, 0xD0, 0x02, 0x28, 0x07, 0xBF, 0x04, 0x99 ,
0x10, 0x31, 0x04, 0x99, 0x0A, 0x31, 0x13, 0xE0, 0x40, 0x58, 0x02, 0x00, 0x44, 0x58, 0x02, 0x00, 0x48, 0x58, 0x02, 0x00, 0xE8, 0x58, 0x02, 0x00, 0xEA, 0x58, 0x02, 0x00, 0xEB, 0x58, 0x02, 0x00, 0xEC, 0x58, 0x02, 0x00, 0xE2, 0x58, 0x02, 0x00, 0xE4, 0x58, 0x02, 0x00, 0x04, 0x99, 0x18, 0x31, 0x0C, 0x98, 0xF8, 0xF7, 0x06, 0xFC, 0x04, 0x99, 0x01, 0x28, 0x40, 0xF0, 0xFC, 0x81, 0x49, 0x78, 0x01, 0xF0, 0x03, 0x01, 0x01, 0x29, 0x40, 0xF0, 0xF6, 0x81, 0x59, 0x46, 0x09, 0x68, 0x04, 0x9A, 0x8E, 0x46, 0x51, 0x46, 0xD2, 0x8A, 0x0B, 0x88, 0x12, 0x11, 0x93, 0x42, 0x00, 0xF0, 0x37, 0x82, 0x0A, 0x80, 0x06, 0x99, 0x09, 0x88, 0x3C, 0x39, 0x0B, 0xB2, 0x71, 0x46, 0x49, 0x1E, 0x09, 0xD0, 0x49, 0x1E, 0x04, 0xD0, 0x49, 0x1E, 0x08, 0xD1, 0xA3, 0xF1, 0x10, 0x03, 0x04, 0xE0, 0xA3, 0xF1, 0x14, 0x03, 0x01, 0xE0, 0xA3, 0xF1, 0x08, 0x03, 0x1B, 0xB2, 0x05, 0x98, 0x10, 0xB1, 0xA3, 0xF1, 0x02, 0x03, 0x1B, 0xB2, 0xEC, 0x50 ,
0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x2B, 0x00, 0xF1, 0xCE, 0x81, 0x16, 0x98, 0x40, 0xF2, 0x77, 0x51, 0x99, 0x42, 0x0B, 0x90, 0x14, 0x98, 0x05, 0x90, 0x00, 0xF0, 0xA3, 0x81, 0x08, 0x46, 0x00, 0xF1, 0x3C, 0x00, 0x98, 0x42, 0x05, 0x9A, 0x00, 0xF0, 0x9A, 0x81, 0xDF, 0xF8, 0x48, 0x82, 0x14, 0x78, 0x0B, 0x9A, 0xBB, 0x2C, 0x12, 0x78, 0x0C, 0x92, 0x63, 0xD1, 0xDD, 0xF8, 0x68, 0xC0, 0xBC, 0xF9, 0x00, 0x20, 0x91, 0x42, 0x18, 0xBF, 0x90, 0x42, 0x5B, 0xD1, 0x1C, 0x2B, 0x4F, 0xF0, 0x00, 0x00, 0xC0, 0xF2, 0x82, 0x81, 0x3D, 0x2B, 0x13, 0x9D, 0x80, 0xF2, 0x7E, 0x81, 0xA3, 0xF1, 0x1C, 0x01, 0x09, 0xB2, 0x29, 0x80, 0x1E, 0x9A, 0xDD, 0xF8, 0x30, 0x90, 0xB2, 0xF9, 0x00, 0x60, 0xB9, 0xF1, 0x01, 0x0F, 0x15, 0xD1, 0xDD, 0xF8, 0x24, 0x90, 0x03, 0x2E, 0x0D, 0xDA, 0xB9, 0xF9, 0x00, 0x70, 0xB9, 0x42, 0x07, 0xD0, 0x01, 0x26, 0x16, 0x80, 0x4A, 0x46, 0x0E, 0x46, 0x03, 0xE0, 0xC0, 0x46, 0x88, 0x57, 0x02, 0x00 ,
0x76, 0x1C, 0x16, 0x80, 0x1B, 0x9A, 0x16, 0x78, 0x1D, 0x9A, 0x16, 0x70, 0x0C, 0x9A, 0x1F, 0x9E, 0x02, 0x2A, 0x28, 0xD1, 0xB6, 0xF9, 0x00, 0x20, 0xBE, 0xF1, 0x00, 0x0F, 0x1A, 0xD0, 0x03, 0x2A, 0x35, 0x46, 0x0B, 0xDA, 0x0A, 0x9E, 0xB6, 0xF9, 0x00, 0x70, 0xB9, 0x42, 0x04, 0xD0, 0x01, 0x22, 0x2A, 0x80, 0x0A, 0x46, 0x35, 0x46, 0x00, 0xE0, 0xB4, 0x51, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x52, 0x1C, 0x2A, 0x80, 0x1C, 0x99, 0x0A, 0x78, 0x1D, 0x99, 0x0A, 0x70, 0x0F, 0xE0, 0xC0, 0x46, 0x50, 0x57, 0x02, 0x00, 0xA6, 0x64, 0x00, 0x20, 0x4C, 0x57, 0x02, 0x00, 0x28, 0x80, 0x05, 0x99, 0x08, 0x70, 0x08, 0x9A, 0x11, 0x78, 0x41, 0xF0, 0x04, 0x01, 0x11, 0x70, 0x04, 0x46, 0x45, 0x46, 0xAC, 0xF8, 0x00, 0x00, 0x28, 0x70, 0xCC, 0x2C, 0x09, 0x9A, 0x40, 0xF0, 0x00, 0x81, 0xDD, 0xF8, 0x7C, 0xC0, 0x0A, 0x99, 0x1E, 0x9F, 0x45, 0x46, 0xB1, 0xF9, 0x00, 0x60, 0xB2, 0xF9, 0x00, 0x90, 0x28, 0x78, 0xCD, 0xF8, 0x50, 0xC0 ,
0x16, 0x91, 0x0A, 0x97, 0x13, 0x92, 0x09, 0x95, 0x0C, 0x99, 0x01, 0x29, 0x05, 0xD1, 0x05, 0x9A, 0xB0, 0xEB, 0x49, 0x0F, 0x01, 0xD1, 0x00, 0x21, 0x11, 0x70, 0x0C, 0x99, 0x02, 0x29, 0x05, 0xD1, 0x05, 0x9A, 0xB0, 0xEB, 0x46, 0x0F, 0x01, 0xD1, 0x00, 0x21, 0x11, 0x70, 0xB3, 0xF5, 0x14, 0x7F, 0x40, 0xF3, 0xBA, 0x80, 0x40, 0xF2, 0x51, 0x31, 0x99, 0x42, 0x08, 0x99, 0x40, 0xF3, 0xB4, 0x80, 0x09, 0x78, 0x06, 0x29, 0x00, 0xF0, 0xB0, 0x80, 0xA3, 0xF2, 0x51, 0x21, 0x0B, 0xB2, 0x4F, 0xEA, 0xE3, 0x01, 0x03, 0xEB, 0x11, 0x71, 0x4F, 0xEA, 0x21, 0x11, 0xCA, 0xB2, 0x4F, 0xEA, 0xE3, 0x01, 0x03, 0xEB, 0x11, 0x71, 0x15, 0x9D, 0x21, 0xF0, 0x0F, 0x01, 0xA3, 0xEB, 0x01, 0x03, 0x1D, 0x99, 0x2E, 0x68, 0x7C, 0x52, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x91, 0xF8, 0x00, 0xE0, 0x5F, 0xFA, 0x83, 0xF8, 0x60, 0xB1, 0x31, 0x18, 0x11, 0xF8, 0x01, 0x1C, 0x51, 0x40, 0xCB, 0xB2, 0x07, 0xE0, 0xC0, 0x46, 0x50, 0x58, 0x02, 0x00 ,
0x4C, 0x58, 0x02, 0x00, 0xD4, 0x58, 0x02, 0x00, 0x13, 0x46, 0x19, 0x99, 0xDD, 0xF8, 0x6C, 0xA0, 0xDD, 0xF8, 0x70, 0xB0, 0xD1, 0xF8, 0x00, 0xC0, 0x00, 0xF0, 0x0F, 0x01, 0x99, 0x42, 0x22, 0xD0, 0x0A, 0x9B, 0x86, 0x45, 0x9A, 0xF8, 0x00, 0x10, 0xB3, 0xF9, 0x00, 0x30, 0x9B, 0xF8, 0x00, 0x50, 0x15, 0xDD, 0x37, 0x5C, 0x44, 0x1C, 0x82, 0xEA, 0x07, 0x0C, 0x04, 0xF0, 0x0F, 0x07, 0x67, 0x45, 0x0B, 0xD0, 0xA6, 0x45, 0x06, 0x44, 0x0A, 0xDD, 0x76, 0x78, 0x72, 0x40, 0x86, 0x1C, 0x06, 0xF0, 0x0F, 0x06, 0x96, 0x42, 0x03, 0xD1, 0xC0, 0x1C, 0x4D, 0xE0, 0x80, 0x1C, 0x4B, 0xE0, 0x05, 0x9E, 0x00, 0x22, 0x32, 0x70, 0x4A, 0xE0, 0x00, 0xF0, 0x1F, 0x01, 0x01, 0x22, 0x8A, 0x40, 0x17, 0x99, 0xC4, 0x10, 0x0B, 0x68, 0x24, 0xF0, 0x03, 0x01, 0x5C, 0xF8, 0x01, 0x70, 0x3A, 0x42, 0x32, 0xD1, 0x5F, 0x58, 0x3A, 0x42, 0x06, 0x44, 0x1F, 0xD0, 0x18, 0x9B, 0x37, 0x78, 0x1B, 0x68, 0xB8, 0x45, 0x04, 0xD1, 0x58, 0x58, 0x02, 0x42 ,
0x19, 0xD0, 0x63, 0x46, 0x15, 0xE0, 0xA1, 0x10, 0x8C, 0x00, 0x19, 0x59, 0x91, 0x43, 0x19, 0x51, 0x00, 0x90, 0x30, 0x78, 0x01, 0x90, 0x44, 0x53, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x03, 0x20, 0x06, 0x21, 0x02, 0x46, 0x4D, 0xF6, 0x80, 0x53, 0xF3, 0xF7, 0x63, 0xF9, 0x09, 0x99, 0x28, 0x68, 0x0E, 0x78, 0x36, 0x18, 0x06, 0xE0, 0xDB, 0x58, 0x02, 0x00, 0xA0, 0x10, 0x81, 0x00, 0x58, 0x58, 0x02, 0x43, 0x5A, 0x50, 0x86, 0xF8, 0x00, 0x80, 0x0B, 0x98, 0x00, 0x78, 0x0C, 0x90, 0x13, 0x98, 0xB0, 0xF9, 0x00, 0x90, 0x09, 0x98, 0x00, 0x78, 0x0A, 0x9A, 0x40, 0x1C, 0x9B, 0xF8, 0x00, 0x50, 0x9A, 0xF8, 0x00, 0x10, 0xB2, 0xF9, 0x00, 0x30, 0x09, 0x9A, 0xC0, 0xB2, 0x10, 0x70, 0x0C, 0x9A, 0x01, 0x2A, 0x03, 0xD1, 0x88, 0x42, 0xC8, 0xBF, 0x8A, 0xF8, 0x00, 0x00, 0x0C, 0x99, 0x02, 0x29, 0x07, 0xD1, 0xA8, 0x42, 0xC8, 0xBF, 0x8B, 0xF8, 0x00, 0x00, 0x02, 0xE0, 0x0A, 0x98, 0xB0, 0xF9, 0x00, 0x30, 0xB9, 0xF1, 0x00, 0x0F ,
0x06, 0xDD, 0x03, 0x2B, 0x04, 0xD1, 0x11, 0x98, 0x01, 0x22, 0x49, 0x46, 0x00, 0xF0, 0x70, 0xFB, 0x16, 0x98, 0xB0, 0xF9, 0x00, 0x10, 0x14, 0x98, 0x00, 0x29, 0xB0, 0xF9, 0x00, 0x00, 0x05, 0xDD, 0x03, 0x28, 0x03, 0xD1, 0x12, 0x98, 0x02, 0x22, 0x00, 0xF0, 0x62, 0xFB, 0x05, 0x98, 0x04, 0x78, 0x0B, 0x98, 0x00, 0x78, 0x0C, 0x90, 0x08, 0x98, 0xBB, 0x2C, 0x01, 0x78, 0x02, 0xD0, 0xAA, 0x2C, 0x2F, 0xD0, 0x31, 0xE0, 0x0C, 0x98, 0x01, 0x28, 0x0B, 0xD1, 0x0D, 0x98, 0x17, 0x9A, 0x10, 0x60, 0x0C, 0x54, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x0F, 0x98, 0x18, 0x9A, 0x10, 0x60, 0x19, 0x9A, 0x11, 0x98, 0x10, 0x60, 0x47, 0x4A, 0x15, 0x98, 0x02, 0x60, 0x0C, 0x98, 0x02, 0x28, 0x0B, 0xD1, 0x0E, 0x98, 0x17, 0x9A, 0x10, 0x60, 0x10, 0x98, 0x18, 0x9A, 0x10, 0x60, 0x19, 0x9A, 0x12, 0x98, 0x10, 0x60, 0x41, 0x4A, 0x15, 0x98, 0x02, 0x60, 0xCC, 0x20, 0x0F, 0xE0, 0x08, 0x99, 0x09, 0x78, 0x0C, 0xE0, 0x02, 0x20, 0x00, 0xE0 ,
0x01, 0x20, 0x0B, 0x99, 0x08, 0x70, 0x1A, 0x99, 0x0B, 0x80, 0x13, 0x99, 0x00, 0x20, 0x08, 0x80, 0x08, 0x98, 0x01, 0x78, 0xBB, 0x20, 0x05, 0x9A, 0x10, 0x70, 0x06, 0x29, 0x07, 0x99, 0x11, 0xD1, 0x06, 0x20, 0x08, 0x60, 0x20, 0x98, 0x00, 0x25, 0x05, 0x70, 0x21, 0x98, 0x29, 0x46, 0x04, 0x22, 0xFB, 0xF7, 0x27, 0xFB, 0x01, 0x20, 0x00, 0xF0, 0x36, 0xFA, 0x02, 0x20, 0x00, 0xF0, 0x33, 0xFA, 0x22, 0x98, 0x05, 0x60, 0x07, 0x98, 0x04, 0x99, 0x00, 0x68, 0x07, 0x28, 0x44, 0xD1, 0x09, 0x78, 0x03, 0x9C, 0x80, 0x29, 0x40, 0xD1, 0x38, 0x34, 0x21, 0x78, 0x64, 0x1C, 0x22, 0x46, 0x00, 0x29, 0x3A, 0xD1, 0x20, 0x98, 0x90, 0xF8, 0x00, 0xA0, 0x22, 0x98, 0x05, 0x90, 0xD0, 0xF8, 0x00, 0x90, 0x51, 0x46, 0x48, 0x46, 0xFD, 0xF7, 0x79, 0xF9, 0x5F, 0xFA, 0x80, 0xF8, 0x21, 0x9F, 0x15, 0x78, 0x51, 0x46, 0x48, 0x46, 0x17, 0xF8, 0x08, 0x30, 0xFD, 0xF7, 0xD4, 0x54, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x6F, 0xF9, 0x1E, 0x46 ,
0x1B, 0x1D, 0xC0, 0xB2, 0x38, 0x5C, 0x00, 0x1D, 0xA8, 0x42, 0x28, 0x46, 0x07, 0xDD, 0x80, 0x18, 0x82, 0x1C, 0x10, 0x78, 0x2D, 0x18, 0xAD, 0x1C, 0xAD, 0xB2, 0xAB, 0x42, 0xF7, 0xDC, 0x04, 0xF8, 0x01, 0x6B, 0x11, 0x49, 0x32, 0x46, 0x20, 0x46, 0x01, 0xEB, 0x48, 0x11, 0xFA, 0xF7, 0xDC, 0xF9, 0xAD, 0x1B, 0xFF, 0x20, 0x34, 0x19, 0xAD, 0x1E, 0x04, 0xF8, 0x01, 0x0B, 0x25, 0x70, 0x05, 0x98, 0x01, 0x68, 0x49, 0x1C, 0x01, 0x60, 0x07, 0x98, 0x00, 0x68, 0x07, 0x28, 0x04, 0xD0, 0x06, 0x99, 0x08, 0x68, 0x20, 0xF4, 0x80, 0x30, 0x08, 0x60, 0x23, 0xB0, 0xBD, 0xE8, 0xF0, 0x8F, 0xC0, 0x46, 0x8C, 0x57, 0x02, 0x00, 0xCC, 0x57, 0x02, 0x00, 0x54, 0x58, 0x02, 0x00, 0x6D, 0x48, 0x2D, 0xE9, 0xF0, 0x47, 0x6D, 0x4D, 0x82, 0x89, 0x4A, 0xF6, 0x55, 0x21, 0xAD, 0xF5, 0xFE, 0x7D, 0x91, 0x42, 0x4F, 0xF0, 0x00, 0x01, 0xAD, 0xF1, 0x38, 0x0D, 0x10, 0xD1, 0x29, 0x60, 0x41, 0xF2, 0x10, 0x41, 0x81, 0x81, 0x4F, 0xF6, 0xFF, 0x70 ,
0x65, 0x49, 0x08, 0x60, 0x28, 0x68, 0x00, 0x90, 0x02, 0x22, 0x05, 0x21, 0x03, 0x20, 0x41, 0xF2, 0x34, 0x23, 0xF3, 0xF7, 0x4A, 0xF8, 0x29, 0x68, 0x60, 0x4C, 0x01, 0x29, 0x20, 0x68, 0x40, 0xF0, 0xAF, 0x80, 0x5E, 0x4D, 0x02, 0x28, 0x29, 0x68, 0x23, 0xD1, 0x5D, 0x48, 0x00, 0x68, 0x9C, 0x55, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x5E, 0x4A, 0x12, 0x5C, 0x00, 0x92, 0x01, 0x91, 0x5D, 0x49, 0x09, 0x68, 0x02, 0x91, 0x5A, 0x49, 0x0B, 0x5C, 0x03, 0x20, 0x07, 0x21, 0x04, 0x22, 0xF3, 0xF7, 0x30, 0xF8, 0x5A, 0x49, 0x4A, 0x79, 0x58, 0x48, 0x00, 0x92, 0x02, 0x79, 0x01, 0x92, 0x40, 0x79, 0x04, 0x22, 0x02, 0x90, 0x03, 0x20, 0x0B, 0x79, 0x07, 0x21, 0xF3, 0xF7, 0x22, 0xF8, 0x03, 0x20, 0x20, 0x60, 0xEC, 0xF7, 0x1C, 0xFF, 0x20, 0x68, 0x29, 0x68, 0x04, 0x28, 0x15, 0xD1, 0x0D, 0x20, 0x8D, 0xF8, 0x10, 0x00, 0x00, 0x25, 0x8D, 0xF8, 0x14, 0x50, 0x8D, 0xF8, 0x15, 0x10, 0x28, 0x46, 0x63, 0x21, 0x00, 0xF0, 0xFC, 0xFA ,
0x63, 0x21, 0x28, 0x46, 0x00, 0xF0, 0x86, 0xFA, 0x03, 0xA9, 0x04, 0xA8, 0xE0, 0xF7, 0xCC, 0xFC, 0x05, 0x20, 0x20, 0x60, 0x45, 0x4D, 0x05, 0x28, 0x29, 0x68, 0x01, 0xF1, 0x01, 0x01, 0x29, 0x60, 0x1D, 0xD1, 0x43, 0x4A, 0x8A, 0x42, 0x1A, 0xD1, 0x42, 0x48, 0x01, 0x68, 0x00, 0x91, 0x40, 0x68, 0x01, 0x90, 0x03, 0x20, 0x02, 0x46, 0x06, 0x21, 0x40, 0x4E, 0x33, 0x46, 0x22, 0x3B, 0xF2, 0xF7, 0xED, 0xFF, 0x3D, 0x48, 0x01, 0x68, 0x00, 0x91, 0x40, 0x68, 0x33, 0x46, 0x06, 0x21, 0x01, 0x90, 0x03, 0x20, 0x02, 0x46, 0xF2, 0xF7, 0xE2, 0xFF, 0x00, 0x20, 0x28, 0x60, 0x20, 0x68, 0x06, 0x28, 0x47, 0xD1, 0x4F, 0xF0, 0x07, 0x0A, 0xC4, 0xF8, 0x64, 0x56, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x03, 0x20, 0x48, 0xF2, 0x70, 0x53, 0x01, 0x22, 0x04, 0x21, 0xF2, 0xF7, 0xD2, 0xFF, 0xDF, 0xF8, 0xC8, 0x80, 0x30, 0x4F, 0x48, 0xF2, 0x70, 0x59, 0x01, 0x25, 0x49, 0xEA, 0x05, 0x03, 0x01, 0x22, 0x04, 0x21, 0x03, 0x20 ,
0xF2, 0xF7, 0xC5, 0xFF, 0x00, 0x24, 0x17, 0xF8, 0x02, 0x0F, 0x20, 0xE0, 0x69, 0x01, 0x04, 0xEB, 0x08, 0x02, 0x88, 0x18, 0xC6, 0x1C, 0x43, 0x78, 0x00, 0x93, 0x80, 0x78, 0x01, 0x90, 0x30, 0x78, 0x02, 0x90, 0x53, 0x5C, 0x51, 0x46, 0x04, 0x22, 0x03, 0x20, 0xF2, 0xF7, 0xB0, 0xFF, 0x38, 0x78, 0x01, 0x1B, 0xB1, 0xF1, 0xFF, 0x3F, 0x08, 0xD1, 0xF0, 0x78, 0x00, 0x90, 0xB3, 0x78, 0x03, 0x20, 0x02, 0x22, 0x05, 0x21, 0xF2, 0xF7, 0xA3, 0xFF, 0x38, 0x78, 0x24, 0x1D, 0xE4, 0xB2, 0xA0, 0x42, 0xDC, 0xDC, 0xAD, 0x1C, 0xED, 0xB2, 0x04, 0x2D, 0xCD, 0xDB, 0x63, 0x21, 0x4F, 0xF4, 0x05, 0x70, 0xF1, 0xF7, 0xA5, 0xFC, 0xE1, 0xF7, 0x87, 0xFD, 0x7F, 0xB0, 0x0E, 0xB0, 0xBD, 0xE8, 0xF0, 0x87, 0xC0, 0x46, 0x04, 0x74, 0x00, 0x20, 0x48, 0x57, 0x02, 0x00, 0x40, 0x00, 0x3D, 0x80, 0x44, 0x57, 0x02, 0x00, 0x50, 0x57, 0x02, 0x00, 0x88, 0x57, 0x02, 0x00, 0x58, 0x57, 0x02, 0x00, 0x68, 0x57, 0x02, 0x00, 0x54, 0x57, 0x02, 0x00 ,
0x78, 0x57, 0x02, 0x00, 0x80, 0x57, 0x02, 0x00, 0x4C, 0x57, 0x02, 0x00, 0x2C, 0x57, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x03, 0x00, 0x30, 0x58, 0x02, 0x00, 0x38, 0x58, 0x02, 0x00, 0x66, 0x55, 0xDD, 0xEE, 0xD3, 0x58, 0x02, 0x00, 0x54, 0x58, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x57, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBC, 0x58, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0xE9, 0xFE, 0x4F, 0x4A, 0x4A, 0x49, 0x4D, 0x00, 0x90, 0xB2, 0xF9, 0x00, 0x20, 0x43, 0xA3, 0x29, 0x78, 0x01, 0x93, 0x43, 0xA3, 0x01, 0x28, 0x02, 0x93, 0x47, 0x4E, 0xDF, 0xF8, 0x1C, 0x81, 0xDF, 0xF8, 0x1C, 0x91, 0x1E, 0xD0, 0x43, 0x48, 0x04, 0x78, 0x48, 0x01, 0x87, 0x19, 0x30, 0x18, 0x01, 0x99, 0x06, 0x22, 0xF9, 0xF7, 0xCC, 0xFF, 0x40, 0x46, 0x01, 0x78, 0x00, 0x68, 0x07, 0xF1, 0x06, 0x07, 0x07, 0xF8, 0x01, 0x1B, 0x07, 0xF8, 0x01, 0x4B, 0x4F, 0xF0, 0x00, 0x01, 0x07, 0xF8, 0x01, 0x1B, 0x20, 0xB9, 0x39, 0x70, 0x28, 0x78, 0x4E, 0x46, 0x0A, 0x21, 0x58, 0xE0, 0xDF, 0xF8, 0xE4, 0xB0, 0x0F, 0xE0, 0xD4, 0xB2, 0x48, 0x01, 0x87, 0x19, 0x30, 0x18, 0x02, 0x99, 0x07, 0x22 ,
0xF9, 0xF7, 0xAE, 0xFF, 0xFF, 0x1D, 0x00, 0x20, 0xDF, 0xF8, 0xCC, 0xB0, 0x07, 0xF8, 0x01, 0x4B, 0x07, 0xF8, 0x01, 0x0B, 0x16, 0x2C, 0xB2, 0x46, 0xAE, 0xBF, 0x14, 0x20, 0x60, 0x1E, 0xC0, 0xB2, 0x38, 0x70, 0x4E, 0x46, 0x84, 0x59, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x7F, 0x1C, 0x40, 0x1C, 0xC2, 0xB2, 0x28, 0x78, 0x5B, 0x46, 0x00, 0x21, 0x32, 0x54, 0x38, 0x46, 0x00, 0xF0, 0x10, 0xF9, 0x28, 0x78, 0x16, 0x2C, 0x31, 0x5C, 0x01, 0xF1, 0x0A, 0x01, 0x31, 0x54, 0x00, 0xF1, 0x01, 0x00, 0xC0, 0xB2, 0x28, 0x70, 0x2B, 0xDB, 0x00, 0x99, 0x0A, 0xEB, 0x40, 0x10, 0x07, 0x46, 0x01, 0x29, 0xA4, 0xF1, 0x01, 0x09, 0x09, 0xD0, 0x01, 0x99, 0x06, 0x22, 0xF9, 0xF7, 0x7D, 0xFF, 0x40, 0x46, 0x00, 0x78, 0xBF, 0x1D, 0x07, 0xF8, 0x01, 0x0B, 0x04, 0xE0, 0x02, 0x99, 0x07, 0x22, 0xF9, 0xF7, 0x73, 0xFF, 0xFF, 0x1D, 0x07, 0xF8, 0x01, 0x4B, 0x15, 0x3C, 0x15, 0x21, 0x28, 0x78, 0xE2, 0xB2, 0x5B, 0x46, 0x07, 0xF8, 0x01, 0x1B ,
0x32, 0x54, 0x07, 0xF8, 0x01, 0x9B, 0x38, 0x46, 0x00, 0xF0, 0xDF, 0xF8, 0x28, 0x78, 0x31, 0x5C, 0x0A, 0x31, 0x31, 0x54, 0x40, 0x1C, 0x28, 0x70, 0xBD, 0xE8, 0xFE, 0x8F, 0xC0, 0x46, 0x54, 0x54, 0x54, 0x4B, 0x45, 0x59, 0x00, 0xC0, 0x54, 0x54, 0x54, 0x53, 0x53, 0x49, 0x44, 0x00, 0x4C, 0x58, 0x02, 0x00, 0xDE, 0x58, 0x02, 0x00, 0xE0, 0x58, 0x02, 0x00, 0x54, 0x58, 0x02, 0x00, 0x54, 0x57, 0x02, 0x00, 0xD4, 0x58, 0x02, 0x00, 0xCC, 0x57, 0x02, 0x00, 0x8C, 0x57, 0x02, 0x00, 0x7E, 0xB5, 0x04, 0x46, 0x0D, 0x46, 0x94, 0xF8, 0x36, 0x10, 0x15, 0x4A, 0x07, 0x29, 0x18, 0xBF, 0x4C, 0x5A, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x11, 0x68, 0x0A, 0xD1, 0x01, 0x21, 0x11, 0x60, 0x12, 0x4B, 0x0D, 0x26, 0x04, 0xF1, 0x24, 0x02, 0x76, 0x1E, 0x42, 0xF8, 0x14, 0x3F, 0x53, 0x60, 0xFA, 0xD1, 0x94, 0xF8, 0x36, 0x00, 0x0E, 0x4E, 0x00, 0x90, 0x30, 0x68, 0x41, 0xF2, 0x12, 0x13, 0x04, 0x22, 0x01, 0x90, 0x02, 0x91, 0x07, 0x21 ,
0x03, 0x20, 0xF2, 0xF7, 0xCB, 0xFD, 0x29, 0x46, 0x20, 0x46, 0xE7, 0xF7, 0x81, 0xFC, 0x31, 0x68, 0x00, 0x22, 0x05, 0x29, 0x02, 0xD1, 0x05, 0x49, 0x08, 0x31, 0x0A, 0x60, 0x7E, 0xBD, 0xC0, 0x46, 0x48, 0x57, 0x02, 0x00, 0xA0, 0x86, 0x01, 0x00, 0x44, 0x57, 0x02, 0x00, 0x00, 0x7C, 0x00, 0x20, 0x70, 0xB5, 0x4D, 0x00, 0x20, 0x2D, 0x4F, 0xF0, 0x00, 0x01, 0x0C, 0x46, 0x4F, 0xEA, 0x55, 0x13, 0x09, 0xD3, 0x50, 0xF8, 0x21, 0x60, 0xB6, 0xF1, 0xFF, 0x3F, 0x04, 0xD1, 0x49, 0x1C, 0xC9, 0xB2, 0x20, 0x3D, 0x5B, 0x1E, 0xF5, 0xD1, 0x4D, 0xB1, 0x20, 0x2D, 0x09, 0xD2, 0x01, 0x23, 0xAB, 0x40, 0x5B, 0x1E, 0x50, 0xF8, 0x21, 0x00, 0x18, 0x40, 0x83, 0x42, 0x01, 0xD1, 0x4F, 0xF0, 0x01, 0x04, 0x07, 0x48, 0x03, 0x78, 0x2C, 0xB9, 0x01, 0x21, 0x91, 0x40, 0xC9, 0x43, 0xC9, 0xB2, 0x0B, 0x40, 0x03, 0xE0, 0x01, 0x21, 0x91, 0x40, 0xC9, 0xB2, 0x0B, 0x43, 0x03, 0x70, 0x70, 0xBD, 0xC0, 0x46, 0xE6, 0x58, 0x02, 0x00, 0x1C, 0xB5 ,
0x0F, 0x4C, 0x14, 0x5B, 0x02, 0x00, 0xC8, 0x00, 0x00, 0x00, 0x22, 0x68, 0x01, 0x2A, 0x15, 0xD1, 0x0C, 0x48, 0x00, 0x68, 0x07, 0x28, 0x14, 0xBF, 0x40, 0x20, 0x4F, 0xF4, 0x05, 0x70, 0x63, 0x21, 0xF1, 0xF7, 0x85, 0xFA, 0x20, 0x68, 0x00, 0x90, 0x43, 0xF2, 0x33, 0x33, 0x06, 0x21, 0x40, 0x20, 0x01, 0x90, 0x03, 0x20, 0x02, 0x46, 0xF2, 0xF7, 0x6A, 0xFD, 0x1C, 0xBD, 0xF1, 0xF7, 0x77, 0xFA, 0x1C, 0xBD, 0x44, 0x57, 0x02, 0x00, 0x48, 0x57, 0x02, 0x00, 0x1E, 0xB5, 0x04, 0x46, 0x0A, 0x49, 0x00, 0x20, 0x0A, 0x4A, 0x08, 0x60, 0x0A, 0x49, 0x00, 0x90, 0x01, 0x90, 0x11, 0x60, 0x09, 0x4A, 0x45, 0xF2, 0x55, 0x53, 0x02, 0x91, 0x10, 0x60, 0x07, 0x21, 0x04, 0x22, 0x03, 0x20, 0xF2, 0xF7, 0x4E, 0xFD, 0x20, 0x46, 0xE7, 0xF7, 0xCF, 0xFD, 0x1E, 0xBD, 0x48, 0x57, 0x02, 0x00, 0x04, 0x74, 0x00, 0x20, 0x34, 0x12, 0x66, 0x09, 0x44, 0x57, 0x02, 0x00, 0x30, 0xB5, 0x0D, 0x46, 0x84, 0x69, 0xDC, 0xF7, 0x47, 0xFC, 0x24, 0x1D ,
0x01, 0x28, 0x04, 0xEB, 0x45, 0x01, 0x06, 0xD1, 0x89, 0x8E, 0x04, 0xEB, 0x85, 0x04, 0x11, 0xB9, 0x21, 0x69, 0x01, 0xB9, 0x00, 0x20, 0x30, 0xBD, 0x30, 0xB5, 0x05, 0x46, 0x5A, 0xB1, 0x03, 0xEB, 0x41, 0x03, 0x1C, 0x78, 0x59, 0x78, 0x41, 0xEA, 0x04, 0x11, 0x52, 0x1E, 0x03, 0xF1, 0x02, 0x03, 0x05, 0xF8, 0x01, 0x1B, 0xF5, 0xD1, 0x30, 0xBD, 0x00, 0xB5, 0x00, 0x20, 0xDC, 0x5B, 0x02, 0x00, 0x30, 0x00, 0x00, 0x00, 0xE7, 0xF7, 0x86, 0xFF, 0x03, 0x48, 0x01, 0x68, 0x03, 0x29, 0x04, 0xBF, 0x04, 0x21, 0x01, 0x60, 0x00, 0xBD, 0xC0, 0x46, 0x44, 0x57, 0x02, 0x00, 0x03, 0x4A, 0x12, 0x68, 0x01, 0x2A, 0x04, 0xBF, 0x02, 0x48, 0x63, 0x21, 0xF1, 0xF7, 0x26, 0xBA, 0x48, 0x57, 0x02, 0x00, 0x02, 0x20, 0x01, 0x00 };

unsigned short fw_length = 4616;

#ifdef TEENSY3
const uint8_t cRMdefaultParams[128] =
#else
PROGMEM prog_uchar cRMdefaultParams[128] =
#endif
{ 0x03, 0x00, 0x01, 0x01, 0x14, 0x14, 0x00, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x27, 0x23, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x25, 0x23, 0x23, 0x23, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x01, 0x77, 0x80, 0x1D, 0x1F, 0x22, 0x26, 0x28, 0x29, 0x1A, 0x1F, 0x22, 0x24, 0x26, 0x28, 0x16, 0x1D, 0x1E, 0x20, 0x24, 0x25, 0x1E, 0x2D, 0x01, 0x02, 0x02, 0x02, 0x02, 0x00, 0x15, 0x15, 0x15, 0x11, 0x15, 0x15, 0x0E, 0x00};















void PrintMACAddress(void) {
	for (int i=0; i<MAC_SIZE; i++) {
		if (i!=0) {
			Serial.print(F(":"));
			}
		Serial.print(macBuffer[i], HEX);
		}
	Serial.println();
	}
	







void StartCC3000Driverless(void) {
	Serial.println(F("    Starting CC3000 with no patches"));
	cc3000.begin(2);
	Serial.println(F("        Started"));
	}



	
	
void StopCC3000(void) {
	Serial.println(F("    Stopping CC3000...."));
	wlan_stop();
	Serial.println(F("        Stopped"));
	}






void BasicCC30000Test(void) {
	char printBuffer[20];
	
	Serial.println(F("Testing the CC3000..."));
	
	Serial.println(F("    Initializing hardware..."));
	if (!cc3000.begin()) {
		Serial.println(F("        Unable to initialize the CC3000! Check your wiring! Aborting..."));
		for (;;);
		}
		
	Serial.println(F("    CC3000 initalized. Getting info..."));		
		
	if(nvmem_get_mac_address(macBuffer)!=0)  {
		Serial.println(F("        Unable to retrieve MAC Address! Aborting..."));
		for (;;);
		}
	else {
		Serial.print(F("        MAC Address: "));
		PrintMACAddress();
		}
		
	byte versionInfo[2];
	
	if (nvmem_read_sp_version(versionInfo)!=0) {
		Serial.println(F("        Unable to retrive firmware version! Aborting..."));
		for (;;);
		}
	else {
		Serial.print(F("        Firmware version: "));
		Serial.print(versionInfo[0]);
		Serial.print(F("."));
		Serial.println(versionInfo[1]);
		}
		
	Serial.print(F("    RX buffer size: "));
	Serial.print(CC3000_RX_BUFFER_SIZE);
	Serial.println(F(" bytes"));
	
	Serial.print(F("    TX buffer size: "));
	Serial.print(CC3000_TX_BUFFER_SIZE);
	Serial.println(F(" bytes"));
	
	StopCC3000();
    
	}













void PrintRMRecord(void) {
	for (int i=0; i<8; i++) {
		Serial.print(F("        "));
		for (int j=0; j<16; j++) {
			if (rmBuffer[i*16+j]<16) {
				Serial.print(F(" "));
				}
			Serial.print(rmBuffer[i*16+j], HEX);
			Serial.print(F(" "));
			}
		Serial.println();
		}
	}




void ShowEEPROM(void) {

	Serial.println(F("Show MAC and radio file info from Arduino EEPROM"));

	Serial.println(F("    Reading MAC address data from EEPROM"));
	for (int i=0; i<MAC_SIZE; i++) {
		macBuffer[i] = EEPROM.read(MAC_ADDRESS_EEPROM_LOCATION+i);
		}
		
	Serial.println(F("    Reading RM record data from EEPROM"));
	for (int i=0; i<RM_SIZE; i++) {
		rmBuffer[i] = EEPROM.read(RM_ADDRESS_EEPROM_LOCATION+i);
		}
		
	Serial.print(F("    MAC address: "));
	PrintMACAddress();
		
	Serial.println(F("    Radio data:"));
	PrintRMRecord();
	}








void GetCC3000Info(bool copyToEEPROM) {

	if (copyToEEPROM) {
		Serial.println(F("Copy CC3000 MAC and radio file to EEPROM"));
		}
	else {
		Serial.println(F("Show CC3000 MAC and radio file"));
		}

	StartCC3000Driverless();
		
	Serial.println(F("    Reading MAC address"));
	byte mac_status = nvmem_get_mac_address(macBuffer);
	if (mac_status==0) {
		Serial.print(F("        MAC address read successful. MAC is: "));
		PrintMACAddress();
		
		if (copyToEEPROM) {
			Serial.println(F("        Writing MAC address to Arduino EEPROM..."));
			for (int i=0; i<MAC_SIZE; i++) {
				EEPROM.write(MAC_ADDRESS_EEPROM_LOCATION+i, macBuffer[i]);
				}
			Serial.println(F("        Verifying..."));
			for (int i=0; i<MAC_SIZE; i++) {
				if (EEPROM.read(MAC_ADDRESS_EEPROM_LOCATION+i)  != macBuffer[i]) {
					Serial.println(F("            Verify failed. Aborting."));
					for (;;);
					}
				}
			Serial.println(F("        Verify OK"));
			}
		}
	else {
		Serial.print(F("         Unable to read MAC address. "));
		if (copyToEEPROM) {
			Serial.print(F("Will not save to EEPROM"));
			}
		Serial.println();
		}
		
		
	Serial.println(F("    Reading radio record"));
	
	// The TI PatchProgrammer reads this 128 byte record as 16 chunks of 8 bytes, so that's what we'll do
	for (int i=0; i<16; i++) {
		byte rval = nvmem_read(NVMEM_RM_FILEID, 8, 8*i, (unsigned char *)&rmBuffer[i*8]);
		if (rval!=0) {
			Serial.print(F("    Reading chunk "));
			Serial.print(i);
			Serial.print(F(" failed. Aborting."));
			for (;;);
			}
		}
	Serial.println(F("        Read OK. Radio data:"));
	PrintRMRecord();
		
	if (copyToEEPROM) {
		Serial.println(F("        Writing radio record to Arduino EEPROM..."));
		for (int i=0; i<RM_SIZE; i++) {
			EEPROM.write(RM_ADDRESS_EEPROM_LOCATION+i, rmBuffer[i]);
			}
		Serial.println(F("        Verifying..."));
		for (int i=0; i<RM_SIZE; i++) {
			if (EEPROM.read(RM_ADDRESS_EEPROM_LOCATION+i)  != rmBuffer[i]) {
				Serial.println(F("            Verify failed. Aborting."));
				for (;;);
				}
			}
		Serial.println(F("        Verify OK"));
		}

	StopCC3000();
	
	}














void UseDefaults(void) {

	// An earlier version of the patch utility generated a random MAC address but
	// my Verizon router didn't like them, so now I'm defaulting to a known good
	// value, which seems to work fine
	static uint8_t macAddress[MAC_SIZE] = { 0x08, 0x00, 0x28, 0x01, 0x79, 0x3F };
	
	Serial.println(F("Using stock MAC and copy default Radio File to Arduino EEPROM"));
	
	Serial.println(F("    Loading stock MAC..."));
	for (int i=0; i<MAC_SIZE; i++) {
		EEPROM.write(MAC_ADDRESS_EEPROM_LOCATION+i, macAddress[i]);
		}
		
	Serial.println(F("    Copying default RM file data..."));
	for (int i=0; i<RM_SIZE; i++) {
		#ifdef TEENSY3
		byte zaz = cRMdefaultParams[i];
		#else
		byte zaz = pgm_read_byte(cRMdefaultParams + i);
		#endif
		EEPROM.write(RM_ADDRESS_EEPROM_LOCATION+i, zaz);
		}
	Serial.println(F("        Verifying..."));
	for (int i=0; i<RM_SIZE; i++) {
		#ifdef TEENSY3
		byte zaz = cRMdefaultParams[i];
		#else
		byte zaz = pgm_read_byte(cRMdefaultParams + i);
		#endif
		if (EEPROM.read(RM_ADDRESS_EEPROM_LOCATION+i)  != zaz) {
			Serial.println(F("            Verify failed. Aborting."));
			for (;;);
			}
		}
	Serial.println(F("        Verify OK"));
		
	Serial.println(F("    Done!"));
	}




















//*****************************************************************************
//
//! fat_read_content
//!
//! \param[out] is_allocated  array of is_allocated in FAT table:\n
//!						 an allocated entry implies the address and length of the file are valid.
//!  		    			 0: not allocated; 1: allocated.
//! \param[out] is_valid  array of is_valid in FAT table:\n
//!						 a valid entry implies the content of the file is relevant.
//!  		    			 0: not valid; 1: valid.
//! \param[out] write_protected  array of write_protected in FAT table:\n
//!						 a write protected entry implies it is not possible to write into this entry.
//!  		    			 0: not protected; 1: protected.
//! \param[out] file_address  array of file address in FAT table:\n
//!						 this is the absolute address of the file in the EEPROM.
//! \param[out] file_length  array of file length in FAT table:\n
//!						 this is the upper limit of the file size in the EEPROM.
//!
//! \return on succes 0, error otherwise
//!
//! \brief  parse the FAT table from eeprom 
//
//*****************************************************************************
unsigned char fat_read_content(unsigned char *is_allocated,
                               unsigned char *is_valid,
                               unsigned char *write_protected,
                               unsigned short *file_address,
                               unsigned short *file_length)
{
	unsigned short  index;
	unsigned char   ucStatus;
	unsigned char   fatTable[48];
	unsigned char*  fatTablePtr = fatTable;
	
	// read in 6 parts to work with tiny driver
	for (index = 0; index < 6; index++)
	{
		ucStatus = nvmem_read(16, 8, 4 + 8*index, fatTablePtr); 
		fatTablePtr += 8;
	}
	
	fatTablePtr = fatTable;
	
	for (index = 0; index <= NVMEM_RM_FILEID; index++)
	{
		*is_allocated++ = (*fatTablePtr) & BIT0;
		*is_valid++ = ((*fatTablePtr) & BIT1) >> 1;
		*write_protected++ = ((*fatTablePtr) & BIT2) >> 2;
		*file_address++ = (*(fatTablePtr+1)<<8) | (*fatTablePtr) & (BIT4|BIT5|BIT6|BIT7);
		*file_length++ = (*(fatTablePtr+3)<<8) | (*(fatTablePtr+2)) & (BIT4|BIT5|BIT6|BIT7);
		
		fatTablePtr += 4;  // move to next file ID
	}
	
	return ucStatus;
}






#define NUM_FAT_RECORDS	(NVMEM_RM_FILEID + 1)

void ShowFAT(void) {

	unsigned char isAllocated[NUM_FAT_RECORDS],
		isValid[NUM_FAT_RECORDS],
		writeProtected[NUM_FAT_RECORDS];
	unsigned short fileAddress[NUM_FAT_RECORDS], fileLength[NUM_FAT_RECORDS];
	
	Serial.println(F("CC3000 File Table"));	

	StartCC3000Driverless();	
			
	Serial.println(F("    Reading FAT"));
	byte status = fat_read_content(isAllocated, isValid, writeProtected, fileAddress, fileLength);
	if (status==0) {
		Serial.println(F("        FAT read successful"));
		Serial.println(F("              #   A   V   W   Addr    Len"));
		Serial.println(F("             ----------------------------"));
		for (int i=0; i<NUM_FAT_RECORDS; i++) {
		
			Serial.print(F("             "));
			
			if (i<10) {
				Serial.print(F(" "));
				}
			Serial.print(i);
			Serial.print(F("   "));
			
			if (isAllocated[i]==1) {
				Serial.print(F("Y"));
				}
			else if (isAllocated[i]==0) {
				Serial.print(F("N"));
				}
			else {
				Serial.print(F("?"));
				}
			Serial.print(F("   "));
			
			if (isValid[i]==1) {
				Serial.print(F("Y"));
				}
			else if (isValid[i]==0) {
				Serial.print(F("N"));
				}
			else {
				Serial.print(F("?"));
				}
			Serial.print(F("   "));
			
			if (writeProtected[i]==1) {
				Serial.print(F("Y"));
				}
			else if (writeProtected[i]==0) {
				Serial.print(F("N"));
				}
			else {
				Serial.print(F("?"));
				}
			Serial.print(F("   "));
			
			if (fileAddress[i]<4096) { Serial.print(F(" ")); }
			if (fileAddress[i]<256) { Serial.print(F(" ")); }
			if (fileAddress[i]<16) { Serial.print(F(" ")); }
			Serial.print(fileAddress[i], HEX);
			Serial.print(F("   "));
			
			if (fileLength[i]<4096) { Serial.print(F(" ")); }
			if (fileLength[i]<256) { Serial.print(F(" ")); }
			if (fileLength[i]<16) { Serial.print(F(" ")); }
			Serial.print(fileLength[i], HEX);
			
			Serial.println();
			}
		Serial.println(F("             ----------------------------"));
		Serial.println(F("             A=Active  V=Valid  W=Write Protected  Addr=Start address  Len=Length"));
		Serial.println(F("             ----------------------------"));
		}
	else {
		Serial.println(F("        Unable to read FAT."));
		}
		
	StopCC3000();
	}




















// 2 dim array to store address and length of new FAT
const unsigned short aFATEntries[2][NVMEM_RM_FILEID + 1] = 
/*  address 	*/  {{0x50, 	0x1f0, 	0x390, 	0x1390, 	0x2390, 	0x4390, 	0x6390, 	0x63a0, 	0x63b0, 	0x63f0, 	0x6430, 	0x6830},
/*  length	*/	{0x1a0, 	0x1a0, 	0x1000, 	0x1000, 	0x2000, 	0x2000, 	0x10, 	0x10, 	0x40, 	0x40, 	0x400, 	0x200}};
/* 0. NVS */
/* 1. NVS Shadow */
/* 2. Wireless Conf */
/* 3. Wireless Conf Shadow */
/* 4. BT (WLAN driver) Patches */
/* 5. WiLink (Firmware) Patches */
/* 6. MAC addr */
/* 7. Frontend Vars */
/* 8. IP config */
/* 9. IP config Shadow */
/* 10. Bootloader Patches */
/* 11. Radio Module params */
/* 12. AES128 for smart config */
/* 13. user file */
/* 14. user file */
/* 15. user file */



//*****************************************************************************
//
//! fat_write_content
//!
//! \param[in] file_address  array of file address in FAT table:\n
//!						 this is the absolute address of the file in the EEPROM.
//! \param[in] file_length  array of file length in FAT table:\n
//!						 this is the upper limit of the file size in the EEPROM.
//!
//! \return on succes 0, error otherwise
//!
//! \brief  parse the FAT table from eeprom 
//
//*****************************************************************************
unsigned char fat_write_content(
																unsigned short const *file_address,
																unsigned short const *file_length)
{
	unsigned short  index = 0;
	unsigned char   ucStatus;
	unsigned char   fatTable[48];
	unsigned char*  fatTablePtr = fatTable;
	
	// first, write the magic number
	ucStatus = nvmem_write(16, 2, 0, (unsigned char *)"LS");
	
	for (; index <= NVMEM_RM_FILEID; index++)
	{
		// write address low char and mark as allocated
		*fatTablePtr++ = (unsigned char)(file_address[index] & 0xff) | BIT0;
		
		// write address high char
		*fatTablePtr++ = (unsigned char)((file_address[index]>>8) & 0xff);
		
		// write length low char
		*fatTablePtr++ = (unsigned char)(file_length[index] & 0xff);
		
		// write length high char
		*fatTablePtr++ = (unsigned char)((file_length[index]>>8) & 0xff);		
	}
	
	// second, write the FAT
	// write in two parts to work with tiny driver
	ucStatus = nvmem_write(16, 24, 4, fatTable); 
	ucStatus = nvmem_write(16, 24, 24+4, &fatTable[24]); 
	
	// third, we want to erase any user files
	memset(fatTable, 0, sizeof(fatTable));
	ucStatus = nvmem_write(16, 16, 52, fatTable); 
	
	return ucStatus;
}





void WriteFAT(void) {

	Serial.println(F("Writing File Table to CC3000"));

	StartCC3000Driverless();
	
	Serial.println(F("    Writing FAT"));

	byte rval = fat_write_content(aFATEntries[0], aFATEntries[1]);
	if (rval==0) {
		Serial.println(F("        Successful!"));
		}
	else {
		Serial.print(F("        Problem writing FAT. Aborting on error "));
		Serial.println(rval);
		for(;;);
		}
	
	StopCC3000();
	}

















void CopyInfoToNVRAM(void) {

	Serial.println(F("Writing Mac and RM record to CC3000"));

	StartCC3000Driverless();
		
	Serial.println(F("    Reading MAC address data from EEPROM"));
	for (int i=0; i<MAC_SIZE; i++) {
		macBuffer[i] = EEPROM.read(MAC_ADDRESS_EEPROM_LOCATION+i);
		}
	Serial.println(F("    Writing MAC to CC3000..."));
	byte rval = nvmem_set_mac_address(macBuffer);
	if (rval==0) {
		Serial.println(F("        Successful."));
		}
	else {
		Serial.println(F("        Problem writing MAC address. Aborting."));
		for (;;);
		}
		
	Serial.println(F("    Reading RM record data from EEPROM"));
	for (int i=0; i<RM_SIZE; i++) {
		rmBuffer[i] = EEPROM.read(RM_ADDRESS_EEPROM_LOCATION+i);
		}
	Serial.println(F("    Writing RM record to CC3000..."));
	// TI writes the RM record back as 4 chunks of 32 bytes, so that's what we'll do
	for (int i=0; i<4; i++) {
		rval = nvmem_write(NVMEM_RM_FILEID, 32, 32*i, (unsigned char *)&rmBuffer[i*32]);
		if (rval!=0) {
			Serial.print(F("        Problem writing RM record, chunk "));
			Serial.print(i);
			Serial.print(F(". Aborting."));
			for(;;);
			}
		}
	Serial.println(F("        Successful."));

	
	StopCC3000();
	}










void WritePatch(bool writeDriver) {
	if (writeDriver) {
		Serial.println(F("Write new driver to CC3000"));
		}
	else {
		Serial.println(F("Write new firmware to CC3000"));
		}
		
	StartCC3000Driverless();
	
	byte rval;
	
	Serial.println(F("    Writing data..."));
	if (writeDriver) {
		rval = nvmem_write_patch(NVMEM_WLAN_DRIVER_SP_FILEID, drv_length, wlan_drv_patch);
		}
	else {
		rval = nvmem_write_patch(NVMEM_WLAN_FW_SP_FILEID, fw_length, fw_patch);
		}
		
	if (rval==0) {
		Serial.println(F("        Successful!"));
		}
	else {
		Serial.println(F("        Problem writing patch. Aborting."));
		for(;;);
		}
	
	StopCC3000();
	}














void DisplayMenu(void) {
	Serial.println(F("\n\nCommand options:"));
	
	Serial.println(F("    0  - Test the CC3000"));
	Serial.println(F("    1  - Show MAC address and radio file on CC3000"));
	Serial.println(F("    2  - Show MAC address and radio file in Arduino EEPROM"));
	Serial.println(F("    3  - Show current CC3000 file table"));
	Serial.println(F("    4Y - Copy MAC address and radio file from CC3000 to Arduino EEPROM"));
	Serial.println(F("    5D - Copy default MAC and radio file to Arduino EEPROM"));
	Serial.println(F("    6Y - Write a new file table to the CC3000"));
	Serial.println(F("    7Y - Copy MAC address and radio file from Arduino EEPROM to CC3000"));
	Serial.println(F("    8Y - Write new driver to CC3000"));
	Serial.println(F("    9Y - Write new firmware to CC3000"));

	Serial.println();
	Serial.println();
	}
	
	
	
void CommandProcessor(char *buffer) {
	if (buffer[0]=='0') {
		BasicCC30000Test();
		}
	else if (buffer[0]=='1') {
		GetCC3000Info(false);
		}
	else if (buffer[0]=='2') {
		ShowEEPROM();
		}
	else if (buffer[0]=='3') {
		ShowFAT();
		}
	else if ((buffer[0]=='4') && (buffer[1]=='Y')) {
		GetCC3000Info(true);
		}
	else if ((buffer[0]=='5') && (buffer[1]=='D')) {
		UseDefaults();
		}
	else if ((buffer[0]=='6') && (buffer[1]=='Y')) {
		WriteFAT();
		}
	else if ((buffer[0]=='7') && (buffer[1]=='Y')) {
		CopyInfoToNVRAM();
		}
	else if ((buffer[0]=='8') && (buffer[1]=='Y')) {
		WritePatch(true);
		}
	else if ((buffer[0]=='9') && (buffer[1]=='Y')) {
		WritePatch(false);
		}
	else {
		Serial.print(F("Unrecognized command \""));
		Serial.print(buffer);
		Serial.println(F("\""));
		}
	}







void setup(void) {
	Serial.begin(115200);
	
	//while (!Serial);	// wait for the Serial Monitor to be opened on Teensy, Leonardo, etc.

	Serial.println(F("The Arduino CC3000 Firmware 1.24 Patcher"));
	Serial.println(F("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"));
	}




	
	
void loop(void) {
	char buffer[COMMAND_BUFFER_SIZE+1];	// 1 extra byte to allow room for the terminating null
	
	memset(buffer, 0, COMMAND_BUFFER_SIZE+1);
	int offset=0;
	
	DisplayMenu();
	
	for (;;) {
		if (Serial.available()) {
			char ch = Serial.read();
			if (ch == '\n') {
				break;
				}
			buffer[offset++] = ch;
			if (offset >= COMMAND_BUFFER_SIZE) {
				offset = COMMAND_BUFFER_SIZE-1;
				}
			}
		}
		
	CommandProcessor(buffer);		
	}
	







